<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Heiswayi Nrird on Tech</title>
 <link href="http://heiswayi.github.io/atom.xml" rel="self"/>
 <link href="http://heiswayi.github.io/"/>
 <updated>2016-02-11T14:36:32+08:00</updated>
 <id>http://heiswayi.github.io</id>
 <author>
   <name>Heiswayi Nrird</name>
   <email>hnrird@gmail.com</email>
 </author>

 
 <entry>
   <title>Simple Pomodoro Technique Timer Application</title>
   <link href="http://heiswayi.github.io/simple-pomodoro-technique-timer-application.html"/>
   <updated>2015-12-04T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/simple-pomodoro-technique-timer-application</id>
   <content type="html">&lt;p&gt;Talking about Time Management at work, there is one of the more popular time management life hacks used today, it&amp;#39;s called &lt;a href=&quot;https://en.wikipedia.org/wiki/Pomodoro_Technique&quot;&gt;Pomodoro Technique&lt;/a&gt; created in the 1980s by Francesco Cirillo. The Pomodoro Technique is a time management philosophy that aims to provide the user with maximum focus and creative freshness, thereby allowing them to complete projects faster with less mental fatique.&lt;/p&gt;

&lt;p&gt;The technique uses a timer to break down work into intervals traditionally 25 minutes in length, separated by short breaks (e.g. 5 minutes). Each 25-minute work period is called a &amp;quot;pomodoro&amp;quot;, named after the Italian word for tomato. Francesco Cirillo used a kitchen timer shaped like a tomato as his personal timer, and thus the method&amp;#39;s name.&lt;/p&gt;

&lt;p&gt;Well, you can &lt;a href=&quot;https://www.google.com/search?q=pomodoro+technique&quot;&gt;google&lt;/a&gt; around if you want to know or learn more about this Pomodoro Technique.&lt;/p&gt;

&lt;p&gt;Inspired from an &lt;a href=&quot;http://github.com/Mellen/Pomodoro&quot;&gt;open source Pomodoro Technique Timer application&lt;/a&gt; originally developed by &lt;a href=&quot;http://www.matthewellen.co.uk/&quot;&gt;Matthew Ellen&lt;/a&gt; in 2010, so I take the source code, &lt;a href=&quot;https://github.com/heiswayi/Pomodoro&quot;&gt;update it&lt;/a&gt; for my own use by making a little change and adding new features to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let the pictures speak for themselves.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the normal look of the application on startup or before pressing &amp;quot;START WORKING&amp;quot; button:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/JPmbbLb.png&quot; alt=&quot;Screenshot1&quot;&gt;&lt;/p&gt;

&lt;p&gt;When the user pressed &amp;quot;START WORKING&amp;quot; button, the application will start the Pomodoro timer and minimize into the tray panel:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/d2Uqbvs.png&quot; alt=&quot;Screenshot2&quot;&gt;&lt;/p&gt;

&lt;p&gt;After 25-minute period has passed, the application will beep once and show up with a &amp;quot;Take a break!&amp;quot; message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/1vh1MjD.png&quot; alt=&quot;Screenshot3&quot;&gt;&lt;/p&gt;

&lt;p&gt;If the user finished his/her break time, he/she can continue the Pomodoro timer again by pressing &amp;quot;START WORKING&amp;quot; button. Just repeat the process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TIPS:&lt;/strong&gt; After four &amp;quot;pomodoros&amp;quot; has passed (100 minutes of work time with 15 minutes of break time), you then can take a 15-30 minute break.&lt;/p&gt;

&lt;p&gt;This application is a very simple Pomodoro timer application, but a quite helpful to me since my official job is working with PC all the time. At least, it gives me better focus completing my job tasks.&lt;/p&gt;

&lt;h3 id=&quot;downloads&quot;&gt;Downloads&lt;/h3&gt;

&lt;p&gt;If you want to try, go ahead, download the latest binary package (&lt;code&gt;Pomodoro.exe&lt;/code&gt; file) on the &lt;a href=&quot;https://github.com/heiswayi/Pomodoro/releases&quot;&gt;&lt;strong&gt;release page&lt;/strong&gt;&lt;/a&gt;. No installation required. The application&amp;#39;s source code are also available on &lt;a href=&quot;https://github.com/heiswayi/Pomodoro&quot;&gt;&lt;strong&gt;GitHub repo&lt;/strong&gt;&lt;/a&gt;. Freeware and open source. This application is built in C# WPF with .NET Framework 3.5 SP1.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Termie2</title>
   <link href="http://heiswayi.github.io/termie2.html"/>
   <updated>2015-12-01T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/termie2</id>
   <content type="html">&lt;p&gt;I have been using &lt;a href=&quot;http://termie.sourceforge.net/&quot;&gt;Termie&lt;/a&gt; for some time ago, and I liked it. It&amp;#39;s a simple RS232 terminal program, originally developed by David McClurg in 2008. Termie is a clone of &lt;a href=&quot;http://www.compuphase.com/software_termite.htm&quot;&gt;Termite from ITB CompuPhase&lt;/a&gt;. It is a useful program to monitor a serial port connection or log an output data from a RS232 communication device.&lt;/p&gt;

&lt;p&gt;So today, I just give a little &lt;em&gt;touch up&lt;/em&gt; to Termie&amp;#39;s original source code, make it a bit better for me by updating it to so-called &lt;strong&gt;Termie2&lt;/strong&gt;. This is due to the project development has stopped and no update since May 2008. &lt;em&gt;I might keep updating Termie2 from time to time either adding new features or fixing bugs.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Termie2&amp;#39;s Screenshot (v1.0)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/WKP3PBr.png&quot; alt=&quot;Screenshot1&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/3M6qfHr.png&quot; alt=&quot;Screenshot2&quot;&gt;&lt;/p&gt;

&lt;p&gt;Termie2&amp;#39;s latest &lt;strong&gt;source code&lt;/strong&gt; are available on my &lt;a href=&quot;https://github.com/heiswayi/Termie2&quot;&gt;GitHub&lt;/a&gt; or go directly to &lt;a href=&quot;https://github.com/heiswayi/Termie2/releases&quot;&gt;&lt;strong&gt;release page&lt;/strong&gt;&lt;/a&gt; to download the binary package.&lt;/p&gt;

&lt;p&gt;This Termie2 program, not much the differences, just a bit change in design and some code optimizations. It will kept up to date when there is a new feature added or bug fixes. Termie2 is built in C# WinForms with .NET Framework 3.5 SP1.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SerialComm Monitor Application</title>
   <link href="http://heiswayi.github.io/serialcomm-monitor-application.html"/>
   <updated>2015-11-25T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/serialcomm-monitor-application</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;SerialComm Monitor&lt;/strong&gt; is a serial communication application based on &lt;code&gt;SerialPort&lt;/code&gt; class, built in C# WPF with MVVM design pattern to send (write) or receive (read) data string to/from a serial communication physical interface connected via RS232 or USB to the computer (Windows OS).&lt;/p&gt;

&lt;p&gt;SerialComm Monitor v2.0.0 Screenshot&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/eSRqhDP.png&quot; alt=&quot;V2&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;latest-features-available&quot;&gt;Latest Features Available&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Basic serial port settings&lt;/li&gt;
&lt;li&gt;Send (write) data string to serial port&lt;/li&gt;
&lt;li&gt;Receive or monitor (read) data sent from serial port&lt;/li&gt;
&lt;li&gt;Line ending options&lt;/li&gt;
&lt;li&gt;Autoscroll output box&lt;/li&gt;
&lt;li&gt;Dark Metro-like application skin&lt;/li&gt;
&lt;li&gt;Export output data to a file&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;application-prerequisites&quot;&gt;Application Prerequisites&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=30653&quot;&gt;Microsoft .NET Framework 4.5 (x86 and x64)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;downloads&quot;&gt;Downloads&lt;/h2&gt;

&lt;p&gt;Download the latest &lt;a href=&quot;https://github.com/heiswayi/SerialComm&quot;&gt;source code&lt;/a&gt; on GitHub or the latest binary file on &lt;a href=&quot;https://github.com/heiswayi/SerialComm/releases&quot;&gt;release page&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;P/S:&lt;/strong&gt; This article content will be updated from time to time.&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating WPF Cascaded ComboBox In MVVM</title>
   <link href="http://heiswayi.github.io/creating-wpf-cascaded-combobox-in-mvvm.html"/>
   <updated>2015-11-19T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/creating-wpf-cascaded-combobox-in-mvvm</id>
   <content type="html">&lt;p&gt;Implementing ComboBox in WPF XAML with MVVM design pattern may look like hard at first, but not that hard actually. This tutorial will show you a basic example how you can develop the &lt;strong&gt;cascaded ComboBox with MVVM implementation&lt;/strong&gt; using &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; class.&lt;/p&gt;

&lt;h2 id=&quot;understanding-mvvm&quot;&gt;Understanding MVVM&lt;/h2&gt;

&lt;p&gt;First, we need to understand how MVVM pattern works. Let&amp;#39;s see the MVVM architecture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/kLUzCAs.gif&quot; alt=&quot;MVVM&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example diagram of MVVM design pattern.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here are the basic explanations of MVVM important elements:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;View:&lt;/strong&gt; This is our UI design, in this case is our XAML. The view is responsible for defining the structure, layout, and appearance of what the user sees on the screen. No business logic is here.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model:&lt;/strong&gt; This is a data model along with business and validation logic.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ViewModel:&lt;/strong&gt; This is what we called the glue that binds &lt;strong&gt;View&lt;/strong&gt; and &lt;strong&gt;Model&lt;/strong&gt; together. It&amp;#39;s responsible for handling the view logic. Typically, the view model interacts with the model by invoking methods in the model classes. The view model then provides data from the model in a form that the view can easily use. The view model retrieves data from the model and then makes the data available to the view, and may reformat the data in some way that makes it simpler for the view to handle. The view model also provides implementations of commands that a user of the application initiates in the view.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;So, to do this in Visual Studio, let&amp;#39;s start with a new project. In my case, here is how my Visual Studio project structure looks:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Solution &amp;#39;ComboBoxMVVMExample&amp;#39; (1 project)
└── ComboBoxMVVMExample
    ├── Properties
    ├── References
    ├── Model
    ├── View
    ├── ViewModel
    ├── App.config
    ├── App.xaml
    └── MainWindow.xaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don&amp;#39;t forget to create these three folders; &lt;strong&gt;Model&lt;/strong&gt;, &lt;strong&gt;View&lt;/strong&gt; and &lt;strong&gt;ViewModel&lt;/strong&gt;. These folders are not automatically generated by Visual Studio, we need to create them ourselves.&lt;/p&gt;

&lt;p&gt;Inside &lt;strong&gt;ViewModel&lt;/strong&gt;, let&amp;#39;s create two common class files called &lt;code&gt;RelayCommand.cs&lt;/code&gt; and &lt;code&gt;ViewModelBase.cs&lt;/code&gt;. So, our new project structure should look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Solution &amp;#39;ComboBoxMVVMExample&amp;#39; (1 project)
└── ComboBoxMVVMExample
    ├── Properties
    ├── References
    ├── Model
    ├── View
    ├── ViewModel
    |   ├── RelayCommand.cs
    |   └── ViewModelBase.cs
    ├── App.config
    ├── App.xaml
    └── MainWindow.xaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; All code here have been simplified; all comments and linebreaks have been removed. Please check the &lt;a href=&quot;https://github.com/heiswayi/ComboBoxMVVMExample&quot;&gt;source code&lt;/a&gt; of the project for more details.&lt;/p&gt;

&lt;p&gt;The code inside &lt;code&gt;ViewModelBase.cs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.ComponentModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Diagnostics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ComboBoxMVVMExample.ViewModel&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ViewModelBase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INotifyPropertyChanged&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;        [Conditional(&amp;quot;DEBUG&amp;quot;)]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;        [DebuggerStepThrough]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;VerifyPropertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TypeDescriptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Invalid property name: &amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ThrowOnInvalidPropertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;Debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThrowOnInvalidPropertyName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RaisePropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VerifyPropertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PropertyChangedEventHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VerifyPropertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;PropertyChangedEventHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PropertyChangedEventArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The code inside &lt;code&gt;RelayCommand.cs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Diagnostics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ComboBoxMVVMExample.ViewModel&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RelayCommand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICommand&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Predicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_canExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RelayCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RelayCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Predicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ArgumentNullException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;execute&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;_execute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_canExecute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;        [DebuggerStepThrough]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CanExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_canExecute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_canExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CanExecuteChanged&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequerySuggested&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RequerySuggested&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; You may copy-paste those code above into your files.&lt;/p&gt;

&lt;p&gt;Now, we have finished with our basic classes that required for MVVM implementation to work without problem.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-view&quot;&gt;Creating the View&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s start creating our View. Inside &lt;strong&gt;View&lt;/strong&gt; folder, I have created a XAML (UserControl) file called &lt;code&gt;ComboBox.xaml&lt;/code&gt;. The new project structure should look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Solution &amp;#39;ComboBoxMVVMExample&amp;#39; (1 project)
└── ComboBoxMVVMExample
    ├── Properties
    ├── References
    ├── Model
    ├── View
    |   └── ComboBox.xaml
    ├── ViewModel
    |   ├── RelayCommand.cs
    |   └── ViewModelBase.cs
    ├── App.config
    ├── App.xaml
    └── MainWindow.xaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside &lt;code&gt;ComboBox.xaml&lt;/code&gt; file, we design our XAML code into something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;UserControl&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ComboBoxMVVMExample.View.ComboBox&amp;quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;xmlns:mc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;StackPanel&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Vertical&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;StackPanel&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Horizontal&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Get Enum items: &amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0 0 10 0&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;120&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ComboBox&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;120&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ItemsSource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding EnumItems}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;SelectedItem=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding EnumSelectedItem}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0 0 10 0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Show Selected Item&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Command=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding ShowEnumItemCommand}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;StackPanel&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Horizontal&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Get Country list: &amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0 0 10 0&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;120&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ComboBox&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;120&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ItemsSource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding CountryList}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;DisplayMemberPath=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;CountryName&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;SelectedValue=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding SelectedCountryCode}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;SelectedValuePath=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;CountryTwoLetterCode&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0 0 10 0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding SelectedCountryCode}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;StackPanel&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Horizontal&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Get State list: &amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0 0 10 0&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;120&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ComboBox&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;120&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ItemsSource=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding StateList}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;DisplayMemberPath=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;StateName&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;SelectedValue=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding SelectedState}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;SelectedValuePath=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;StateName&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;IsEnabled=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding AllowStateSelection}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0 0 10 0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding SelectedState}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserControl&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside here, I have added three ComboBox elements. The first ComboBox is for &lt;code&gt;enum&lt;/code&gt;-type list. This is just an example of binding the &lt;code&gt;ICommand&lt;/code&gt; interface and use of &lt;code&gt;RelayCommand&lt;/code&gt; later. Another two ComboBox elements are an example of the cascaded ComboBox using &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s how the GUI will look:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/OjRjTdJ.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt;

&lt;h3 id=&quot;selecteditem-selectedvalue-selectedvaluepath-and-displaymemberpath&quot;&gt;SelectedItem, SelectedValue, SelectedValuePath and DisplayMemberPath&lt;/h3&gt;

&lt;p&gt;If you notice that inside ComboBox there are some parameters have been used such as &lt;code&gt;SelectedItem&lt;/code&gt;, &lt;code&gt;SelectedValue&lt;/code&gt;, &lt;code&gt;SelectedValuePath&lt;/code&gt;, and &lt;code&gt;DisplayMemberPath&lt;/code&gt;. So, what are the differences?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SelectedItem:&lt;/strong&gt; This will return the currently selected item in the List/ComboBox/container. This is an object as you can see. If your List/ComboBox/etc. contains a list of strings, it&amp;#39;ll be a string. If it contains integers, it&amp;#39;ll be an integer (int).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SelectedValue:&lt;/strong&gt; If we want only a part of an object, set the property and you&amp;#39;ll get the value of that property. Please note that, if &lt;code&gt;SelectedValuePath&lt;/code&gt; is not used, this is the same as using &lt;code&gt;SelectedItem&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SelectedValuePath:&lt;/strong&gt; Setting this will make the property &lt;code&gt;SelectedValue&lt;/code&gt; returns the value of the property we have selected. In our example, selecting &amp;quot;CountryTwoLetterCode&amp;quot; will make the &lt;code&gt;SelectedValue&lt;/code&gt; returns only the two-letter code, not the whole country object.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DisplayMemberPath:&lt;/strong&gt; Setting this to a property of an object to be displayed on GUI.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;creating-the-model&quot;&gt;Creating the Model&lt;/h2&gt;

&lt;p&gt;After we&amp;#39;re done with the View, now we need to design our data model. Let&amp;#39;s start creating an example model class file called &lt;code&gt;ExampleModel.cs&lt;/code&gt; inside our &lt;strong&gt;Model&lt;/strong&gt; folder. So, the new project structure should look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Solution &amp;#39;ComboBoxMVVMExample&amp;#39; (1 project)
└── ComboBoxMVVMExample
    ├── Properties
    ├── References
    ├── Model
    |   └── ExampleModel.cs
    ├── View
    |   └── ComboBox.xaml
    ├── ViewModel
    |   ├── RelayCommand.cs
    |   └── ViewModelBase.cs
    ├── App.config
    ├── App.xaml
    └── MainWindow.xaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here&amp;#39;s the code inside &lt;code&gt;ExampleModel.cs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ComboBoxMVVMExample.ViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ViewModelBase.cs&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// List&amp;lt;Country&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ComboBoxMVVMExample.Model&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExampleModel&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EnumItem&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Enum01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Enum02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Enum03&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Country&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getCountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnCountries&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnCountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;United States&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;US&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnCountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Malaysia&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;MY&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnCountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;India&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;IN&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnCountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;State&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getStatesCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;US&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;New York&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;US&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Alaska&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;US&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;West Virginia&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;MY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Kelantan&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;MY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Pulau Pinang&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;MY&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Selangor&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;IN&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Mumbai&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnStates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getStateByCountryCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;countryCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stateList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentState&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getStatesCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;countryCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;stateList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CountryTwoLetterCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StateName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stateList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can create different class file for each object. But, here I just use the same class file only and put inside all of the objects. As you can see from the code above, we have three objects; &lt;code&gt;EnumItem&lt;/code&gt;, &lt;code&gt;Country&lt;/code&gt;, and &lt;code&gt;State&lt;/code&gt;. Please go through the code and understand them.&lt;/p&gt;

&lt;p&gt;Here are the hints:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CountryName&lt;/code&gt;, &lt;code&gt;CountryTwoLetterCode&lt;/code&gt; and &lt;code&gt;StateName&lt;/code&gt; are the properties of the respective objects (Country and State).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getCountries()&lt;/code&gt; and &lt;code&gt;getStatesCollection()&lt;/code&gt; are the instantiation methods used to get a list of Country and State respectively.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getStateByCountryCode(X)&lt;/code&gt; is a method to get a list of states based on a particular country&amp;#39;s two-letter code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EnumItem&lt;/code&gt; class is just an example of a list using enum type.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;creating-the-viewmodel&quot;&gt;Creating the ViewModel&lt;/h2&gt;

&lt;p&gt;Now comes to the &amp;#39;glue&amp;#39; part. Let&amp;#39;s create a view model class file inside &lt;strong&gt;ViewModel&lt;/strong&gt; folder, e.g. &lt;code&gt;ExampleViewModel.cs&lt;/code&gt;. Here is how the new project structure will look:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Solution &amp;#39;ComboBoxMVVMExample&amp;#39; (1 project)
└── ComboBoxMVVMExample
    ├── Properties
    ├── References
    ├── Model
    |   └── ExampleModel.cs
    ├── View
    |   └── ComboBox.xaml
    ├── ViewModel
    |   ├── ExampleViewModel.cs
    |   ├── RelayCommand.cs
    |   └── ViewModelBase.cs
    ├── App.config
    ├── App.xaml
    └── MainWindow.xaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Below is how the code looks like inside &lt;code&gt;ExampleViewModel.cs&lt;/code&gt; file. No need for me to explain much as I put some comments beside the code and the code itself should be at least, self-explainable.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ComboBoxMVVMExample.Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ExampleEnum&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// IEnumerable&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// MessageBox&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ICommand&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.ObjectModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ObservableCollection&amp;lt;Country&amp;gt;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ComboBoxMVVMExample.ViewModel&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// This class inherits from ViewModelBase class&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExampleViewModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewModelBase&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#region ComboBox using enum type&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Private Fields&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnumItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_EnumItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_EnumSelectedItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICommand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_ShowEnumItemCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Public Properties - Used for binding with the View&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IEnumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnumItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EnumItems&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Whatever type of the enum, return them the same too&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnumItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnumItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_EnumItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;_EnumItems&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;EnumItems&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EnumSelectedItem&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_EnumSelectedItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_EnumSelectedItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;EnumSelectedItem&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICommand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShowEnumItemCommand&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_ShowEnumItemCommand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RelayCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShowEnumItemMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_ShowEnumItemCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Private Method&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShowEnumItemMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Get combobox current selected value&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;MessageBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnumSelectedItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;

        &lt;span class=&quot;cp&quot;&gt;#region Cascaded ComboBox using List&amp;lt;T&amp;gt; class&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Private Fields&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CountryList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_SelectedCountryCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_StateList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_SelectedState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Public Properties - Used for binding with the View&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CountryList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_CountryList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_CountryList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;CountryList&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SelectedCountryCode&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_SelectedCountryCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_SelectedCountryCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;SelectedCountryCode&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;AllowStateSelection&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Trigger Enable/Disable UI element when particular country is selected&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;getStateList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Generate a new list of states based on a selected country&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StateList&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_StateList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_StateList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;StateList&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SelectedState&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_SelectedState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;_SelectedState&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;SelectedState&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AllowStateSelection&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SelectedCountryCode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Constructor&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ExampleViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Instantiate, get a list of countries from the Model&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Country&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;CountryList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getCountries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Private Method&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getStateList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Instantiate, get a list of states based on selected country two-letter code from the Model&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_State&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;StateList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_State&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getStateByCountryCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SelectedCountryCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Check the project source code for better code documentations.&lt;/p&gt;

&lt;p&gt;Now we&amp;#39;re finished with the ViewModel. We have everything what we want in place. Basically, the public properties in ViewModel are used to bind with the View. In order for the ViewModel to participate in two-way data binding with the View, its properties must raise the &lt;strong&gt;PropertyChanged&lt;/strong&gt; event. In my case here is &lt;code&gt;OnPropertyChanged(&amp;quot;PropertyName&amp;quot;);&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;View model satisfy this requirement by implementing the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.componentmodel.inotifypropertychanged.aspx&quot;&gt;INotifyPropertyChanged&lt;/a&gt; interface and raising the &lt;strong&gt;PropertyChanged&lt;/strong&gt; event when a property is changed. Listeners can respond appropriately to the property changes when they occur. You can learn more and go through the code inside &lt;code&gt;ViewModelBase.cs&lt;/code&gt; file. As you should notice, it inherits &lt;strong&gt;INotifyPropertyChanged&lt;/strong&gt; interface at the first place.&lt;/p&gt;

&lt;h2 id=&quot;connecting-the-viewmodel-to-the-view&quot;&gt;Connecting the ViewModel to the View&lt;/h2&gt;

&lt;p&gt;There are many approaches to connect a view model to a view, including direct relations and container-based approaches. However, all share the same aim, which is for the view to have a view model assigned to its &lt;strong&gt;DataContext&lt;/strong&gt; property. Views can be connected to view models in a code-behind file, or in the view itself.&lt;/p&gt;

&lt;p&gt;In this example, I connect it using the view itself. So, I don&amp;#39;t need to touch the code-behind file. Check the XAML code in &lt;code&gt;MainWindow.xaml&lt;/code&gt; file below:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Window&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ComboBoxMVVMExample.MainWindow&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:view=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clr-namespace:ComboBoxMVVMExample.View&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:viewModel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clr-namespace:ComboBoxMVVMExample.ViewModel&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MainWindow&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;350&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;525&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Window.DataContext&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;viewModel:ExampleViewModel/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Window.DataContext&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Grid&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Grid&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Window&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see from the XAML above, I add two new namespaces called &lt;code&gt;view&lt;/code&gt; and &lt;code&gt;viewModel&lt;/code&gt;. From there, I can use &lt;code&gt;Window.DataContext&lt;/code&gt; to point out to &lt;code&gt;ExampleViewModel&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;If we compile the project, for sure it will show nothing because we are not yet include our View (&lt;code&gt;ComboBox.xaml&lt;/code&gt;). So, for the last one, let&amp;#39;s include it.&lt;/p&gt;

&lt;p&gt;Final look of &lt;code&gt;MainWindow.xaml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Window&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ComboBoxMVVMExample.MainWindow&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:view=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clr-namespace:ComboBoxMVVMExample.View&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:viewModel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clr-namespace:ComboBoxMVVMExample.ViewModel&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;MainWindow&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;350&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;525&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Window.DataContext&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;viewModel:ExampleViewModel/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Window.DataContext&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Grid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;StackPanel&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Vertical&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;HorizontalAlignment=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Center&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;VerticalAlignment=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Center&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;view:ComboBox/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Grid&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Window&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile again and we should be able to see our ComboBox design. At first, nothing is selected, so ComboBox for &lt;strong&gt;State&lt;/strong&gt; will be disabled. But, whenever I started select a &lt;strong&gt;Country&lt;/strong&gt;, e.g. Malaysia, the ComboBox for &lt;strong&gt;State&lt;/strong&gt; will be enabled, instantiated and populate a list of example states in Malaysia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/LlC4BmP.png&quot; alt=&quot;Final Result&quot;&gt;&lt;/p&gt;

&lt;p&gt;That&amp;#39;s it! Please open the project in Visual Studio for better understanding of this tutorial.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/heiswayi/ComboBoxMVVMExample/archive/master.zip&quot;&gt;&lt;strong&gt;Download Source Code&lt;/strong&gt;&lt;/a&gt; on &lt;a href=&quot;https://github.com/heiswayi/ComboBoxMVVMExample&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;fyi-the-benefits-of-mvvm&quot;&gt;FYI, The Benefits of MVVM&lt;/h2&gt;

&lt;p&gt;MVVM enables a great developer-designer workflow, providing these benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;During the development process, developers and designers can work more independently and concurrently on their components. The designers can concentrate on the view, and if they are using Expression Blend, they can easily generate sample data to work with, while the developers can work on the view model and model components.&lt;/li&gt;
&lt;li&gt;The developers can create unit tests for the view model and the model without using the view. The unit tests for the view model can exercise exactly the same functionality as used by the view.&lt;/li&gt;
&lt;li&gt;It is easy to redesign the UI of the application without touching the code because the view is implemented entirely in XAML. A new version of the view should work with the existing view model.&lt;/li&gt;
&lt;li&gt;If there is an existing implementation of the model that encapsulates existing business logic, it may be difficult or risky to change. In this scenario, the view model acts as an adapter for the model classes and enables you to avoid making any major changes to the model code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have fun coding!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Embedding .DLL Files Into A Single .EXE File</title>
   <link href="http://heiswayi.github.io/embedding-dll-files-into-single-exe-file.html"/>
   <updated>2015-11-16T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/embedding-dll-files-into-single-exe-file</id>
   <content type="html">&lt;p&gt;This method is unusual and rarely people do it, but it still works for me when I want to hide one or two external library binaries like .DLL files into my single .EXE application file. I used to build most of my Windows application in C# language by using Visual Studio.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say I want to compile a simple application, for example a Mini Browser, and I have used these following five external .DLL files in my project:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DevExpress.BonusSkins.v13.2.dll&lt;/li&gt;
&lt;li&gt;DevExpress.Data.v13.2.dll&lt;/li&gt;
&lt;li&gt;DevExpress.Sparkline.v13.2.Core.dll&lt;/li&gt;
&lt;li&gt;DevExpress.Utils.v13.2.dll&lt;/li&gt;
&lt;li&gt;DevExpress.XtraEditors.v13.2.dll&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, I put them in &lt;code&gt;lib&lt;/code&gt; folder and include all of them in my project as shown in the picture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/n3QaSRh.png&quot; alt=&quot;Include in Project Tree&quot;&gt;&lt;/p&gt;

&lt;p&gt;This is my old project where I used C# WinForms to create a pretty simple Mini Browser application.&lt;/p&gt;

&lt;p&gt;Alright, after we included all of the files, we need to change &lt;strong&gt;Build Action&lt;/strong&gt; of each file&amp;#39;s Properties into &lt;code&gt;Embedded Resource&lt;/code&gt; as shown in the picture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/rbmrZRc.png&quot; alt=&quot;Properties of each file&quot;&gt;&lt;/p&gt;

&lt;p&gt;Then, add all of them to &lt;strong&gt;References&lt;/strong&gt; since we&amp;#39;re going to use them in our project as shown in the picture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/U2PwPzY.png&quot; alt=&quot;Add to References&quot;&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to make sure all of our external DLL files also included in &lt;code&gt;Properties\Resources.resx&lt;/code&gt; file as shown in the picture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/9orEOLE.png&quot; alt=&quot;Include in Resources.resx&quot;&gt;&lt;/p&gt;

&lt;p&gt;If nothing&amp;#39;s there, click on &lt;strong&gt;downward arrow&lt;/strong&gt; at the right side of &lt;strong&gt;Add Resource&lt;/strong&gt; and select &lt;strong&gt;Add Existing File...&lt;/strong&gt;, navigate to &lt;code&gt;lib&lt;/code&gt; folder in our project, change file extension to &lt;strong&gt;All File (*.*)&lt;/strong&gt; then select all of our DLL files.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Ok7olQ8.png&quot; alt=&quot;Add Resource&quot;&gt;&lt;/p&gt;

&lt;p&gt;After we&amp;#39;re done with these files setup, go to our main application file constructor code, for example in my case is &lt;code&gt;Form1()&lt;/code&gt; from &lt;code&gt;Form1.cs&lt;/code&gt; file as shown in the picture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Ap2RIJD.png&quot; alt=&quot;Constructor Code&quot;&gt;&lt;/p&gt;

&lt;p&gt;Then, add this anonymous function code on the top of our application constructor, as my case, before &lt;code&gt;InitializeComponent();&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;AppDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CurrentDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AssemblyResolve&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AssemblyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;.dll&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetManifestResourceNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EndsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resourceName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetExecutingAssembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetManifestResourceStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assemblyData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assemblyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assemblyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assemblyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above code requires &lt;code&gt;using System.Reflection;&lt;/code&gt; namespace.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s it! When we build our application, on the output folder e.g. &lt;code&gt;bin&lt;/code&gt;, we should have our single .EXE application file without the external .DLL files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WARNING:&lt;/strong&gt; Please note that, embedding .DLL files into our main application .EXE file will result the file size become bigger as it sum up all file size of each .DLL file.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Use Your Web Browser As Notepad</title>
   <link href="http://heiswayi.github.io/use-your-web-browser-as-notepad.html"/>
   <updated>2015-10-26T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/use-your-web-browser-as-notepad</id>
   <content type="html">&lt;p&gt;We all use Notepad or sticky note or some editors to take immediate notes on something like code snippets, ideas, blog content or todos. Well, I just found this hack is quite interesting to use where we can turn our web browser to be just like a Notepad. The trick actually hacks around the &lt;a href=&quot;http://en.wikipedia.org/wiki/Data_URI_scheme&quot;&gt;Data URI scheme&lt;/a&gt; and HTML &lt;a href=&quot;http://www.w3schools.com/tags/att_global_contenteditable.asp&quot;&gt;contenteditable&lt;/a&gt; attribute.&lt;/p&gt;

&lt;p&gt;The real trick is just type the following code into our web browser&amp;#39;s URL bar:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;data:text/html,&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contenteditable&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the code above will make your page editable just like the Notepad. This is the foundation of the hack! However, to make it looks more interesting, I expand the code and write the CSS styles for it so it will look better than the default. Here is &lt;strong&gt;my version of code&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;data:text/html,&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;contenteditable&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;title&amp;gt;&lt;/span&gt;Browser Text&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&amp;lt;style&amp;gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;iframe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;abbr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;cite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;del&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;dfn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;kbd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;samp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;small&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;sup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;fieldset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;caption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tfoot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;aside&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;embed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;figcaption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;footer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;hgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;nav&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;mark&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;audio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;vertical-align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;baseline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;aside&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;figcaption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;footer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;hgroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;nav&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;list-style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;quotes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;blockckquote&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border-collapse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;collapse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;border-spacing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;monospace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;12px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;19px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#ddd&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;19px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#ddd&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&amp;lt;/html&amp;gt;&lt;/span&gt;Edit this text and start type yours...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go ahead, copy the code and paste it into your web browser! You should see a better look of it. Now, you can start typing whatever you want there.&lt;/p&gt;

&lt;p&gt;Ok, to &lt;strong&gt;save&lt;/strong&gt; the content, just do the usual web browser save; &lt;code&gt;CMD+S&lt;/code&gt; for OSX or &lt;code&gt;Ctrl+S&lt;/code&gt; for Windows. It will save your content as &lt;code&gt;.html&lt;/code&gt; file. You can also &lt;strong&gt;bookmark&lt;/strong&gt; the above data URL to make it easier.&lt;/p&gt;

&lt;p&gt;Have a try and good luck!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Let's Hike! Malaysia</title>
   <link href="http://heiswayi.github.io/lets-hike-malaysia.html"/>
   <updated>2015-10-20T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/lets-hike-malaysia</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/agOTLeg.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;about-the-project&quot;&gt;About the project&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Let&amp;#39;s Hike! Malaysia&lt;/strong&gt; is the name of this project. This project is about a map site that uses Google Map API and JSON data to pinpoint a collection of targeted peaks of hiking expeditions such as mountains, hills and waterfalls around Malaysia.&lt;/p&gt;

&lt;p&gt;Each marker on the map site contains the information of the &lt;strong&gt;peak name&lt;/strong&gt;, &lt;strong&gt;GPS coordinates&lt;/strong&gt;, &lt;strong&gt;elevation profile&lt;/strong&gt; (in meter) and &lt;strong&gt;remark&lt;/strong&gt; or &lt;strong&gt;short description&lt;/strong&gt; about it. The color of the marker is based on the elevation categories;-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blue&lt;/code&gt;: 0 - 199m&lt;/li&gt;
&lt;li&gt;&lt;code&gt;green&lt;/code&gt;: 200m - 499m&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yellow&lt;/code&gt;: 500m - 999m&lt;/li&gt;
&lt;li&gt;&lt;code&gt;red&lt;/code&gt;: 1000m - 1999m&lt;/li&gt;
&lt;li&gt;&lt;code&gt;purple&lt;/code&gt;: 2000m and above&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;project-website&quot;&gt;Project website&lt;/h2&gt;

&lt;p&gt;The map site currently can be viewed here: &lt;a href=&quot;http://heiswayi.github.io/lets-hike/&quot;&gt;heiswayi.github.io/lets-hike&lt;/a&gt;. Later, if I have enough (a lot) of the data, I might purchase a specific web domain for the site.&lt;/p&gt;

&lt;h2 id=&quot;data&quot;&gt;Data&lt;/h2&gt;

&lt;p&gt;The data is in the JSON file (&lt;strong&gt;data.json&lt;/strong&gt;) which can be viewed &lt;a href=&quot;https://github.com/heiswayi/lets-hike/blob/master/data.json&quot;&gt;here&lt;/a&gt; in &lt;a href=&quot;https://github.com/heiswayi/lets-hike&quot;&gt;the GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;contributions&quot;&gt;Contributions&lt;/h2&gt;

&lt;p&gt;Anyone who is interested / willing to help to contribute the data, feel free to do so by telling me on my &lt;a href=&quot;http://twitter.com/HeiswayiNrird&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://www.facebook.com/profile.php?id=1257583160&quot;&gt;Facebook&lt;/a&gt;, or if you are familiar / having GitHub account, can submit it by &lt;a href=&quot;https://github.com/heiswayi/lets-hike/issues/new&quot;&gt;creating an issue&lt;/a&gt; or &lt;a href=&quot;https://github.com/heiswayi/lets-hike/fork&quot;&gt;forking the project&lt;/a&gt; then &lt;a href=&quot;https://github.com/heiswayi/lets-hike/pulls&quot;&gt;create the pull requests&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;accuracy-of-the-data&quot;&gt;Accuracy of the data&lt;/h2&gt;

&lt;p&gt;Please note that, the data provided on the map site may not accurate as 100% because different people might record at different point of peak on different type of GPS devices. These will result a slightly difference in GPS coordinates and elevation profiles. However, I&amp;#39;ll try to use the best one. So, any contribution to the data is really-really welcomed here.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Manually Install Apache, PHP, MySQL Server and Composer on Windows</title>
   <link href="http://heiswayi.github.io/manually-install-apache-php-mysql-composer-on-windows.html"/>
   <updated>2015-10-16T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/manually-install-apache-php-mysql-composer-on-windows</id>
   <content type="html">&lt;p&gt;Instead of using any ready-to-use packages like WampServer, XAMPP and whatnot, you can make your own fully functional WAMP server. So, this tutorial is about &lt;strong&gt;how you can manually install Apache, PHP, MySQL server and Composer on your Windows PC&lt;/strong&gt;. As for your information, when writing this I&amp;#39;m currently using &lt;strong&gt;Windows 10 Pro 64-bit&lt;/strong&gt;. So, this tutorial is based on it. Let&amp;#39;s start!&lt;/p&gt;

&lt;h2 id=&quot;apache&quot;&gt;Apache&lt;/h2&gt;

&lt;p&gt;First, you need to install Apache. It&amp;#39;s recommended for you to read the &lt;a href=&quot;http://httpd.apache.org/docs/current/platform/windows.html&quot;&gt;Platform Specific Notes&lt;/a&gt; of Apache for Windows before you can proceed because it explains some Windows-specific features like running as a service that you don&amp;#39;t have on other OSes and you probably never used before.&lt;/p&gt;

&lt;p&gt;As mentioned in the notes, Apache doesn&amp;#39;t provide binaries for Windows. However, they have links to several third-party sites that provide binaries, for example &lt;a href=&quot;http://www.apachelounge.com/download/&quot;&gt;Apache Lounge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From that website, we can download either the 32-bit version or 64-bit version. If your OS is 64-bit, you should always try to install 64-bit version of software.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s the latest version that I used when writing this: &lt;strong&gt;Apache 2.4.17 Win64&lt;/strong&gt; (&lt;a href=&quot;http://www.apachelounge.com/download/VC14/binaries/httpd-2.4.17-win64-VC14.zip&quot;&gt;httpd-2.4.17-win64-VC14.zip&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Once downloaded, just extract the &lt;code&gt;Apache24&lt;/code&gt; folder to the root of your C drive, so that you will have a path like this; &lt;code&gt;C:\Apache24\bin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Open a command line window (Windows+R and type &lt;code&gt;cmd&lt;/code&gt; then press Enter), change directory into &lt;code&gt;C:\Apache24\bin&lt;/code&gt; or type the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd C:\Apache24\bin
httpd.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Normally, it shouldn&amp;#39;t print any errors.&lt;/p&gt;

&lt;p&gt;If you get an error dialog stating that &lt;code&gt;MSVCR110.dll&lt;/code&gt; is missing, you&amp;#39;ll need to install the &lt;a href=&quot;http://www.microsoft.com/en-us/download/details.aspx?id=30679&quot;&gt;Visual C++ Redistributable for Visual Studio 2012&lt;/a&gt;. If it&amp;#39;s saying that it can&amp;#39;t bind to port 80, check if another application uses that port. Skype application is known to use port 80 and 443 by default. You may need to &lt;a href=&quot;http://i.stack.imgur.com/WKpiY.png&quot;&gt;uncheck &amp;quot;Use port 80 and 443 as alternatives for incoming connections&amp;quot; in its advanced connection settings&lt;/a&gt; and restart your Skype to apply the changes.&lt;/p&gt;

&lt;p&gt;A warning like &lt;code&gt;Could not reliably determine the server&amp;#39;s fully qualified domain name&lt;/code&gt; can be ignored for now.&lt;/p&gt;

&lt;p&gt;Then, open a web browser and browse to &lt;code&gt;http://localhost&lt;/code&gt;. If you see a page saying &lt;code&gt;It works!&lt;/code&gt;, then it means your Apache installation is working.&lt;/p&gt;

&lt;p&gt;The warning above can be fixed by editing &lt;code&gt;C:\Apache24\conf\httpd.conf&lt;/code&gt;, uncomment and change it into something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;ServerName localhost:80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, if you want to run the server automatically when the system starts (even if nobody logs in), you&amp;#39;ll need to run it as a service. Open your command prompt as an administrator, type:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd C:\Apache24\bin
httpd.exe -k install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If it&amp;#39;s currently still running, you need to terminate it first by pressing Ctrl+C in the command prompt.&lt;/p&gt;

&lt;p&gt;Now you have a new service in Services (Windows+R, then type &lt;code&gt;services.msc&lt;/code&gt; then press Enter) named as &amp;quot;Apache2.4&amp;quot;. You can control just like other Windows services to start, stop or restart.&lt;/p&gt;

&lt;h2 id=&quot;php&quot;&gt;PHP&lt;/h2&gt;

&lt;p&gt;Download the latest PHP binaries from the &lt;a href=&quot;http://windows.php.net/download/&quot;&gt;official PHP for Windows download page&lt;/a&gt;, choose &lt;strong&gt;Thread Safe&lt;/strong&gt; version that matches your Apache installation (x86 for 32-bit, x64 for 64-bit).&lt;/p&gt;

&lt;p&gt;The version I used is &lt;strong&gt;VC11 x64 Thread Safe&lt;/strong&gt; (&lt;a href=&quot;http://windows.php.net/downloads/releases/php-5.6.14-Win32-VC11-x64.zip&quot;&gt;php-5.6.14-Win32-VC11-x64.zip&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Create an empty &lt;code&gt;PHP&lt;/code&gt; folder at the root of your C drive, extract the archive there. You should have a path like &lt;code&gt;C:\PHP\ext&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ini &lt;code&gt;C:\PHP&lt;/code&gt;, rename the &lt;code&gt;php.ini-production&lt;/code&gt; or &lt;code&gt;php.ini-development&lt;/code&gt; (depending on what you want) to &lt;code&gt;php.ini&lt;/code&gt;. For me, I chose &lt;code&gt;php.ini-development&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Open that &lt;code&gt;php.ini&lt;/code&gt; file, search for &lt;code&gt;extension_dir = &amp;quot;ext&amp;quot;&lt;/code&gt; and uncomment that line (remove the first &lt;code&gt;;&lt;/code&gt;). I also uncommented several other extensions such as these following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;extension=php_curl.dll
extension=php_fileinfo.dll
extension=php_gd2.dll
extension=php_mbstring.dll
extension=php_mysqli.dll
extension=php_openssl.dll
extension=php_pdo_mysql.dll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don&amp;#39;t forget to set your timezone. Search for &lt;code&gt;;date.timezone&lt;/code&gt;, remove &lt;code&gt;;&lt;/code&gt; and update it into something like this; &lt;code&gt;date.timezone = Asia/Kuala_Lumpur&lt;/code&gt; as for me. Else, it will set to UTC by default.&lt;/p&gt;

&lt;p&gt;Now configure Apache to use that PHP by editing &lt;code&gt;C:\Apache24\conf\httpd.conf&lt;/code&gt;, after all the &lt;code&gt;LoadModule&lt;/code&gt; lines, add the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-apache&quot; data-lang=&quot;apache&quot;&gt;&lt;span class=&quot;nb&quot;&gt;LoadModule&lt;/span&gt; php5_module C:/PHP/php5apache2_4.dll

&lt;span class=&quot;nt&quot;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php5_module&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;DirectoryIndex&lt;/span&gt; index.html index.php
    &lt;span class=&quot;nb&quot;&gt;AddHandler&lt;/span&gt; application/x-httpd-php .php
    &lt;span class=&quot;nb&quot;&gt;PHPIniDir&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;C:/PHP&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now try to start Apache manually or restart the service, if you see no errors, it means your configurations file is valid and PHP is &lt;em&gt;most likely working&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You can test your PHP installation by creating a file like &lt;code&gt;info.php&lt;/code&gt; with &lt;code&gt;&amp;lt;?php phpinfo();&lt;/code&gt; inside. Then browse to &lt;code&gt;http://localhost/info.php&lt;/code&gt;, you should see quite a bit of info about your system and your PHP installation and all its modules.&lt;/p&gt;

&lt;h2 id=&quot;mysql&quot;&gt;MySQL&lt;/h2&gt;

&lt;p&gt;On the &lt;a href=&quot;http://dev.mysql.com/downloads/installer/&quot;&gt;MySQL Installer download page&lt;/a&gt;, download the web installer version. Mine is &lt;a href=&quot;http://dev.mysql.com/downloads/file.php?id=459309&quot;&gt;mysql-installer-web-community-5.6.27.0.msi&lt;/a&gt; - it is the latest version as I&amp;#39;m writing this article.&lt;/p&gt;

&lt;p&gt;The installer will automatically install the appropriate version (32-bit or 64-bit) depending on your system. During the installation, it might install all the available products and may ask for some dependencies like Python for MySQL Connector/Python. You may ignored it first and just proceed. I ignored it because I don&amp;#39;t need those MySQL Connectors and I&amp;#39;m going to remove them anyway.&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re installing for development, then the &lt;code&gt;Developer default&lt;/code&gt; will be your best option. It&amp;#39;ll also install MySQL Workbench which is a native GUI client, thus avoiding you having to install slow web-based tools such as &lt;a href=&quot;https://www.phpmyadmin.net/&quot;&gt;phpMyAdmin&lt;/a&gt; if you aren&amp;#39;t comfortable with using the command line client.&lt;/p&gt;

&lt;p&gt;However, as for me, I just installed &lt;strong&gt;MySQL Server&lt;/strong&gt;, &lt;strong&gt;MySQL Workbench&lt;/strong&gt; and &lt;strong&gt;MySQL Documentation&lt;/strong&gt;. The others I removed them via MySQL Installer.&lt;/p&gt;

&lt;p&gt;But, there is a bug that I&amp;#39;m facing where I cannot start MySQL Workbench and got the error dialog stating something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;The type initializer for &amp;#39;HtmlRenderer.Utils.FontsUtils&amp;#39; threw an exception.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This issue occurs due to the HTML rendered DLL that is included in MySQL Workbench. Full details of the bug are &lt;a href=&quot;https://bugs.mysql.com/bug.php?id=75673&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To fix the bug, I just downloaded this DLL file (&lt;a href=&quot;https://bugs.mysql.com/file.php?id=22868&amp;amp;bug_id=75673&quot;&gt;HtmlRenderer.dll&lt;/a&gt;), go to &lt;code&gt;C:\Program Files\MySQL\MySQL Workbench 6.3 CE\&lt;/code&gt; then paste it here (replace the existing file). Now I can open MySQL Workbench as usual.&lt;/p&gt;

&lt;h3 id=&quot;besides-mysql-workbench-i-also-installed-phpmyadmin&quot;&gt;Besides MySQL Workbench, I also installed phpMyAdmin&lt;/h3&gt;

&lt;p&gt;Previously, I rarely use MySQL Workbench. Most of the time, I use phpMyAdmin.&lt;/p&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://www.phpmyadmin.net/downloads/&quot;&gt;phpMyAdmin download page&lt;/a&gt;, as for me I chose &lt;a href=&quot;https://files.phpmyadmin.net/phpMyAdmin/4.5.0.2/phpMyAdmin-4.5.0.2-english.zip&quot;&gt;phpMyAdmin-4.5.0.2-english.zip&lt;/a&gt;. Extract the archive into the Apache &lt;code&gt;htdocs&lt;/code&gt; folder and rename &lt;code&gt;phpMyAdmin-4.5.0.2-english&lt;/code&gt; into &lt;code&gt;phpmyadmin&lt;/code&gt;. You should have a path like this; &lt;code&gt;C:\Apache24\htdocs\phpmyadmin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;C:\Apache24\htdocs&lt;/code&gt; is your Apache WWW folder. So, your phpMyAdmin can be accessed by visiting the URL: &lt;code&gt;http://localhost/phpmyadmin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Inside &lt;code&gt;C:\Apache24\htdocs\phpmyadmin&lt;/code&gt;, look for &lt;code&gt;config.sample.inc.php&lt;/code&gt; then rename it into &lt;code&gt;config.inc.php&lt;/code&gt;. Open the file, fill in the code line:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$cfg[&amp;#39;blowfish_secret&amp;#39;] = &amp;#39;YOUR_SECRET_KEY&amp;#39;; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;$cfg[&amp;#39;blowfish_secret&amp;#39;] = &amp;#39;W4Y1&amp;#39;; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, nothing much need to configure since phpMyAdmin automatically detect the port used by MySQL Server. So, you can directly access &lt;code&gt;http://localhost/phpmyadmin&lt;/code&gt; and login (username and password) as what you set during MySQL installation.&lt;/p&gt;

&lt;h2 id=&quot;composer-optional&quot;&gt;Composer (Optional)&lt;/h2&gt;

&lt;p&gt;Composer is a tool for dependency management in PHP, like a package manager. It allows to easily install PHP packages and even entire frameworks.&lt;/p&gt;

&lt;p&gt;Composer requires the PHP OpenSSL extension to be enabled, so you need to uncomment the extension line in &lt;code&gt;C:\PHP\php.ini&lt;/code&gt; into something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;extension=php_openssl.dll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now download Composer&amp;#39;s Windows installer from their &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;download page&lt;/a&gt;. Install it and follow the instructions. When prompted for the path to PHP, browse to &lt;code&gt;C:\PHP&lt;/code&gt; then select &lt;code&gt;php.exe&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To test if it works, open the command prompt, type &lt;code&gt;composer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You should get a nice ASCII-art logo and something this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;______
/ ____/___  ____ ___  ____  ____  ________  _____
/ /   / __ \/ __ `__ \/ __ \/ __ \/ ___/ _ \/ ___/
/ /___/ /_/ / / / / / / /_/ / /_/ (__  )  __/ /
\____/\____/_/ /_/ /_/ .___/\____/____/\___/_/
                 /_/
Composer version 1.0-dev (a54f84f05f915c6d42bed94de0cdcb4406a4707b) 2015-10-13 13:09:04
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#39;s it! You now have a fully functional WAMP server (with Composer) that runs as a service and doesn&amp;#39;t depend on any user (accessible even if no one is logged in). If you set up for production instead development, you might need to read carefully their notes or instruction manual, configure your firewall properly and try to consult with expert in order to maximize the security and performance.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>rapid.css</title>
   <link href="http://heiswayi.github.io/rapidcss.html"/>
   <updated>2015-10-15T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/rapidcss</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/heiswayi/rapid.css&quot;&gt;&lt;strong&gt;rapid.css&lt;/strong&gt;&lt;/a&gt; is a mini CSS framework, extended from &lt;a href=&quot;https://github.com/necolas/normalize.css/&quot;&gt;normalize.css v3&lt;/a&gt; to normalize HTML elements/attributes and kickstart the rapid HTML CSS development.&lt;/p&gt;

&lt;p&gt;Whatever &lt;strong&gt;normalize.css&lt;/strong&gt; is doing, &lt;strong&gt;rapid.css&lt;/strong&gt; also does the same. The only difference is that &lt;strong&gt;rapid.css&lt;/strong&gt; can do more than just HTML style-normalizations. You can use &lt;strong&gt;rapid.css&lt;/strong&gt; to kickstart your HTML project immediately by providing the basic HTML elements/attributes styles like blockquote, table, typography elements, forms and etc..&lt;/p&gt;

&lt;p&gt;Words are useless, let the demo show you everything...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://heiswayi.github.io/rapid.css/demo.html&quot;&gt;&lt;strong&gt;View demo page&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/heiswayi/rapid.css/blob/master/demo.html&quot;&gt;View demo page source code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/heiswayi/rapid.css/blob/master/rapid.css&quot;&gt;View &lt;em&gt;rapid.css&lt;/em&gt; source code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://heiswayi.github.io/rapid.css/test.html&quot;&gt;&lt;strong&gt;View test file&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/heiswayi/rapid.css&quot;&gt;&lt;em&gt;rapid.css&lt;/em&gt; project page on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I initiated this project because I feel a need for me to have a mini CSS framework that can speed up my HTML CSS development, especially when I have created a simple HTML page in local. I am a big fan of &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Twitter Bootstrap&lt;/a&gt; and &lt;a href=&quot;http://getuikit.com/&quot;&gt;UIKit&lt;/a&gt;, and I love them. I use them in almost of my projects, but for a simple project or HTML page, I just need an extended version of &lt;strong&gt;normalize.css&lt;/strong&gt;. So, I made this &lt;strong&gt;rapid.css&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Take a look!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Web Colors Guide</title>
   <link href="http://heiswayi.github.io/web-colors-guide.html"/>
   <updated>2015-10-07T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/web-colors-guide</id>
   <content type="html">&lt;p&gt;This color palette is based on &lt;a href=&quot;http://wordpress.com&quot;&gt;WordPress.com&lt;/a&gt; colors, and will be used as my new color reference in web design.&lt;/p&gt;

&lt;p data-height=&quot;650&quot; data-theme-id=&quot;11537&quot; data-slug-hash=&quot;JYyvQY&quot; data-default-tab=&quot;result&quot; data-user=&quot;heiswayi&quot; class=&#39;codepen&#39;&gt;See the Pen &lt;a href=&#39;http://codepen.io/heiswayi/pen/JYyvQY/&#39;&gt;Web Colors Guide&lt;/a&gt; by Heiswayi Nrird (&lt;a href=&#39;http://codepen.io/heiswayi&#39;&gt;@heiswayi&lt;/a&gt;) on &lt;a href=&#39;http://codepen.io&#39;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
</content>
 </entry>
 
 <entry>
   <title>GitHub - Delete Commits History</title>
   <link href="http://heiswayi.github.io/github-delete-commits-history.html"/>
   <updated>2015-10-06T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/github-delete-commits-history</id>
   <content type="html">&lt;p&gt;Here are the git commands to clean up the messy, ugly commits history in a GitHub repository. This is like a repository reset.&lt;/p&gt;

&lt;h3 id=&quot;first-method&quot;&gt;First Method&lt;/h3&gt;

&lt;p&gt;Deleting the &lt;code&gt;.git&lt;/code&gt; folder may cause problems in our git repository. If we want to delete all of our commits history, but keep the code in its current state, try this:&lt;/p&gt;

&lt;p&gt;Check out to a temporary branch:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git checkout --orphan TEMP_BRANCH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add all the files:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Commit the changes:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git commit -am &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete the old branch:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git branch -D master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rename the temporary branch to &lt;strong&gt;master&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git branch -m master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, force update to our repository:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git push -f origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will not keep our old commits history around. &lt;strong&gt;But if this doesn&amp;#39;t work, try the next method below.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;second-method&quot;&gt;Second Method&lt;/h3&gt;

&lt;p&gt;Clone the project, e.g. &lt;code&gt;myproject&lt;/code&gt; is my project repository:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git clone https://github/heiswayi/myproject.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since all of the commits history are in the &lt;code&gt;.git&lt;/code&gt; folder, we have to remove it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd myproject
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And delete the &lt;code&gt;.git&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git rm -rf .git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, re-initialize the repository:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git init
git remote add origin https://github.com/heiswayi/myproject.git
git remote -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add all the files and commit the changes:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git add --all
git commit -am &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Force push update to the &lt;strong&gt;master&lt;/strong&gt; branch of our project repository:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git push -f origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: You might need to provide the credentials for your account.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>PHP - Using Native Password Hashing API</title>
   <link href="http://heiswayi.github.io/php-using-native-password-hashing-api.html"/>
   <updated>2015-10-01T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/php-using-native-password-hashing-api</id>
   <content type="html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Password hashing is one of the most basic security considerations that must be made when designing any application that accepts passwords from users. Without hashing, any passwords that are stored in your application&amp;#39;s database can be stolen if the database is compromised, and then immediately used to compromise not only your application, but also the accounts of your users on other services, if they do not use unique passwords.&lt;/p&gt;

&lt;p&gt;This can be done by applying a hashing algorithm to your user&amp;#39;s passwords before storing them in your database, so you make it implausible for any attacker to determine the original password. Hashing algorithms such as MD5, SHA1 and SHA256 are designed to be very fast and efficient. However, with modern techniques and computer equipment, it has become trivial to &amp;quot;brute force&amp;quot; the output of these algorithms in order to determine the original input. This is why &lt;code&gt;md5()&lt;/code&gt; and &lt;code&gt;sha1()&lt;/code&gt; are not suitable for password hashing functions.&lt;/p&gt;

&lt;p&gt;Luckily, as of PHP 5.5, a &lt;strong&gt;native password hashing API&lt;/strong&gt; was introduced to safely handle both hashing and verifying passwords in a secure manner. When hashing passwords, the two most important considerations are the computational expense, and the salt. The more computationally expensive the hashing algorithm, the longer it will take to brute force its output. So, the suggested algorithm to use when hashing passwords is Blowfish, which is also the default used by this password hashing API.&lt;/p&gt;

&lt;h2 id=&quot;the-implementation-of-api&quot;&gt;The Implementation of API&lt;/h2&gt;

&lt;p&gt;The implementation consists of 4 functions:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;password_hash()&lt;/code&gt; : To create a new password hash&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password_verify()&lt;/code&gt; : To confirm a given password matches with the hash&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password_needs_rehash()&lt;/code&gt; : To check if a password meets the desired hash settings (algorithm, cost)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password_get_info()&lt;/code&gt; : To return information about the hash such as algorithm and cost&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;password_hash()&lt;/strong&gt; creates a new password hash using a strong one-way hashing algorithm and compatible with &lt;a href=&quot;http://php.net/manual/en/function.crypt.php&quot;&gt;&lt;strong&gt;crypt()&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;usage-examples&quot;&gt;Usage Examples&lt;/h2&gt;

&lt;h3 id=&quot;example-1&quot;&gt;Example 1&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;password_hash()&lt;/code&gt; example with &lt;strong&gt;PASSWORD_DEFAULT&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * We just want to hash our password using the current DEFAULT algorithm.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * This is presently BCRYPT, and will produce a 60 character result.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * Beware that DEFAULT may change over time, so you would want to prepare&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * By allowing your storage to expand past 60 characters (255 would be good)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;password_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;KittenDies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PASSWORD_DEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$2y$10$kZ8eWlGS30qABEthikt.uOvdYETzS3azGCutmfOdtXMzEvFuNoMWe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;example-2&quot;&gt;Example 2&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;password_hash()&lt;/code&gt; example with setting &lt;strong&gt;cost&lt;/strong&gt; manually&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * In this case, we want to increase the default cost for BCRYPT to 12.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * Note that we also switched to BCRYPT, which will always be 60 characters.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;cost&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;password_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;KittenDies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PASSWORD_BCRYPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$2y$12$gsF2.s.PkKLusBMsgHrQnOmB5mzG0bHGE97.SA5250aQ0ZTt0Klty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The role of the cost is to ensure that the passwords remain difficult to brute force even as hardware gets faster. You will need to continuously tweak your cost as your own hardware changes. However, if you are not careful and just crank it up to 11 (figuritively speaking) your passwords will take too long to generate, tying up web server threads and can easily lead to a DoS attack.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here&amp;#39;s the code to benchmark your server in order &lt;strong&gt;to determine how high of a cost you can afford&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$timeTarget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 50 milliseconds&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$cost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;password_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PASSWORD_BCRYPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cost&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;microtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$timeTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Appropriate Cost Found: &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Appropriate Cost Found: 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is good if you want to set the highest cost that you can without slowing down your server too much. &lt;strong&gt;8 - 10 is a good baseline&lt;/strong&gt;, and is good if your servers are fast enough. The code above aims for less than 50ms stretching time, which is a good baseline for systems handling interactive logins.&lt;/p&gt;

&lt;h3 id=&quot;example-3&quot;&gt;Example 3&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;password_hash()&lt;/code&gt; example with setting &lt;strong&gt;salt&lt;/strong&gt; manually&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * Note that the salt here is randomly generated.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * Never use a static salt or one that is not randomly generated.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; * For the VAST majority of use-cases, let password_hash generate the salt randomly for you&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;cost&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;salt&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mcrypt_create_iv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MCRYPT_DEV_URANDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;password_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;KittenDies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PASSWORD_BCRYPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$2y$11$dtSMAuO41g5QZcAG76FqTehpk35Dcf0lkEpBffEW7dRqQsrR2E8VO
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;CAUTION:&lt;/strong&gt; It is strongly recommended that you do not generate your own salt for this function. It will create a secure salt automatically for you if you do not specify one.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;example-4&quot;&gt;Example 4&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;password_verify()&lt;/code&gt; example&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$2y$11$dtSMAuO41g5QZcAG76FqTehpk35Dcf0lkEpBffEW7dRqQsrR2E8VO&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;password_verify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;KittenDies&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Password is valid!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Invalid password.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Password is valid!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;If you get incorrect false responses from &lt;strong&gt;password_verify()&lt;/strong&gt; when manually including the hash variable (eg. for testing) and you know it should be correct, make sure you are enclosing the hash variable in single quotes (&amp;#39;) and not double quotes (&amp;quot;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;example-5&quot;&gt;Example 5&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;password_needs_rehash()&lt;/code&gt; example&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rasmuslerdorf&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$2y$10$YCFsG6elYca568hBi2pZ0.3LDL5wjgxct1N8w/oLR/jfHsiQwCqTS&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The cost parameter can change over time as hardware improves&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;cost&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Verify stored hash against plain-text password&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;password_verify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Check if a newer hashing algorithm is available&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// or the cost has changed&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;password_needs_rehash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PASSWORD_DEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// If so, create a new hash, and replace the old one&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$newHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;password_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PASSWORD_DEFAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Log user in&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;example-6&quot;&gt;Example 6&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;password_get_info()&lt;/code&gt; example&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$2y$11$dtSMAuO41g5QZcAG76FqTehpk35Dcf0lkEpBffEW7dRqQsrR2E8VO&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;var_dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;password_get_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;array (size=3)
  &amp;#39;algo&amp;#39; =&amp;gt; int 1
  &amp;#39;algoName&amp;#39; =&amp;gt; string &amp;#39;bcrypt&amp;#39; (length=6)
  &amp;#39;options&amp;#39; =&amp;gt;
    array (size=1)
      &amp;#39;cost&amp;#39; =&amp;gt; int 11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;compatibility&quot;&gt;Compatibility&lt;/h2&gt;

&lt;p&gt;If you are not using PHP 5.5, there is a &lt;a href=&quot;https://github.com/ircmaxell/password_compat&quot;&gt;pure PHP compatibility library&lt;/a&gt; available for PHP 5.3.7 and later.&lt;/p&gt;

&lt;h2 id=&quot;salt&quot;&gt;Salt&lt;/h2&gt;

&lt;p&gt;A cryptographic salt is a data which is applied during the hashing process in order to eliminate the possibility of the output being looked up in a list of pre-calculated pairs of hashes and their input, known as a rainbow table.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;password_hash()&lt;/code&gt; will create a random salt if one is not provided, and this is generally the easiest and the most secure approach.&lt;/p&gt;

&lt;h2 id=&quot;storing-the-salt&quot;&gt;Storing the Salt&lt;/h2&gt;

&lt;p&gt;When using &lt;code&gt;password_hash()&lt;/code&gt; or &lt;code&gt;crypt()&lt;/code&gt;, the return value includes the salt as part of the generated hash. This value should be stored verbatim in your database, as it includes information about the hash function that was used and can then be given directly to &lt;code&gt;password_verify()&lt;/code&gt; or &lt;code&gt;crypt()&lt;/code&gt; when verifying passwords.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/9cmcBRo.png&quot; alt=&quot;Password Hash&quot;&gt;&lt;/p&gt;

&lt;p&gt;The diagram above shows the format of a return value from &lt;code&gt;crypt()&lt;/code&gt; or &lt;code&gt;password_hash()&lt;/code&gt;. As you can see, they are self-contained, with all the information on the algorithm and salt required for future password verification.&lt;/p&gt;

conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;With this new &lt;a href=&quot;http://php.net/password&quot;&gt;password extension&lt;/a&gt;, the password hashing becomes more easier as we don&amp;#39;t need to create our custom-made algorithm class or use any other external password hashing class library in our application anymore.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>My Online Resume Template</title>
   <link href="http://heiswayi.github.io/my-online-resume-template.html"/>
   <updated>2015-09-28T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/my-online-resume-template</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;If you&amp;#39;re looking for a &lt;strong&gt;HTML template&lt;/strong&gt; for your &lt;strong&gt;online resume/CV&lt;/strong&gt;, then you had come to the right place! Because here I&amp;#39;m going to &lt;strong&gt;share&lt;/strong&gt; my online resume template.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As for me, besides &lt;a href=&quot;https://my.linkedin.com/in/nrird&quot;&gt;LinkedIn&lt;/a&gt; profile, I still need my own online resume. And I want it to be &lt;em&gt;as simple as possible&lt;/em&gt;; &lt;strong&gt;minimalist design&lt;/strong&gt;, &lt;strong&gt;white clean&lt;/strong&gt;, &lt;strong&gt;content-focused&lt;/strong&gt;, &lt;strong&gt;higher readability&lt;/strong&gt; and yes, &lt;strong&gt;mobile responsive&lt;/strong&gt;! So, I scrambled around, looked for any inspiration for the minimalist design and the way of information were displayed, then started to create it my own.&lt;/p&gt;

&lt;p&gt;BOOM, here&amp;#39;s the final result!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150928/resume-screenshot.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;And I like it, very much!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live view&lt;/strong&gt; can be visited at &lt;a href=&quot;http://heiswayi.github.io/resume.html&quot;&gt;http://heiswayi.github.io/resume.html&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;technical-information&quot;&gt;Technical information&lt;/h3&gt;

&lt;p&gt;The template is coded in HTML and CSS only. The typeface is &lt;a href=&quot;http://www.fontsquirrel.com/fonts/bpreplay&quot;&gt;BPreplay&lt;/a&gt; font. CSS code is &lt;strong&gt;included directly&lt;/strong&gt; into the HTML &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section, so anyone can easily save the resume as a single HTML file by using the right-click and &amp;quot;Save As..&amp;quot; function. And.. the template also is a &lt;strong&gt;print-friendly&lt;/strong&gt; template! Easy for people to print it directly or just save it as a PDF file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/heiswayi/97dd090bf708f88e2f2f&quot;&gt;&lt;strong&gt;Get/download the source code here!&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;how-to-host-your-online-resume-for-free-with-github-pages&quot;&gt;How to Host Your Online Resume for Free with GitHub Pages&lt;/h3&gt;

&lt;p&gt;Well, there are a lot of options if you want to host your HTML file for free. One is you can use any free web hosting service available out there. But for me, if you don&amp;#39;t have a GitHub account yet, I recommend you to register one and host your HTML file with &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; for free. Check the steps below:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you don&amp;#39;t have the account yet, &lt;a href=&quot;https://github.com/join&quot;&gt;register one&lt;/a&gt;. Else, &lt;a href=&quot;https://github.com/login&quot;&gt;login to GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a repository (shorten as &amp;quot;repo&amp;quot;) called &lt;code&gt;your_username.github.io&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to the repo (&lt;strong&gt;your_username.github.io&lt;/strong&gt;), then inside the repo, create a file called &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy and paste the template&amp;#39;s &lt;a href=&quot;https://gist.github.com/heiswayi/97dd090bf708f88e2f2f&quot;&gt;source code&lt;/a&gt; into the &lt;code&gt;index.html&lt;/code&gt; file and save it. &lt;strong&gt;&lt;em&gt;Before you save, don&amp;#39;t forget to modify the source code to your own information.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Now, you can see live your online resume by visiting the URL: &lt;code&gt;http://your_username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you were already using &lt;code&gt;your_username.github.io&lt;/code&gt; for &lt;strong&gt;your own/other site&lt;/strong&gt;, then you can use it as a &lt;strong&gt;project page&lt;/strong&gt;:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a repo, for example: &lt;code&gt;my-resume&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Create a file called &lt;code&gt;index.html&lt;/code&gt; and paste the &lt;a href=&quot;https://gist.github.com/heiswayi/97dd090bf708f88e2f2f&quot;&gt;source code&lt;/a&gt; into the file. &lt;strong&gt;&lt;em&gt;Don&amp;#39;t forget to modify the source code to your own information.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Create a branch called &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt; - select &lt;strong&gt;Branches&lt;/strong&gt; - then, change the default branch to &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now, you can see live your online resume by visiting the URL: &lt;code&gt;http://your_username.github.io/my-resume/&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;#39;s it! Now, you have your own resume, available online, hosted with free by GitHub.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Minify CSS On The Fly</title>
   <link href="http://heiswayi.github.io/minify-css-on-the-fly.html"/>
   <updated>2015-09-21T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/minify-css-on-the-fly</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;Did you know that if you&amp;#39;re developing a website in PHP, you can minify your CSS code on the fly?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;CSS minification or compression is one of the rules for optimizing a web page loading performance. Here&amp;#39;s a simple trick that we can do to minify a bunch of CSS files on the fly by using a single PHP file.&lt;/p&gt;

&lt;p&gt;Assuming I have a bunch of CSS files such as &lt;strong&gt;grid.css&lt;/strong&gt;, &lt;strong&gt;typography.css&lt;/strong&gt;, &lt;strong&gt;button.css&lt;/strong&gt;, &lt;strong&gt;form.css&lt;/strong&gt;, &lt;strong&gt;table.css&lt;/strong&gt;, etc. in a directory called &lt;code&gt;\assets\css\&lt;/code&gt;. Then I create a PHP file in the same directory and name it as &lt;code&gt;minified.css.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;minified.css.php&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Content-type: text/css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ob_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compress&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* remove comments */&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;!/\*[^*]*\*+([^/][^*]*\*+)*/!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;cm&quot;&gt;/* remove tabs, spaces, newlines, etc. */&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;  &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;    &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;    &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* css files for compression */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;grid.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;typography.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;button.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;form.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;table.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;backgrounds.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pagination.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;breadcrumbs.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;font.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;helpers.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;print.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;animation.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;responsive.css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;ob_end_flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The PHP code above will include all those CSS files, minify them, and output itself as a functional CSS-compressed file.&lt;/p&gt;

&lt;p&gt;This is how we put &lt;strong&gt;minified.css.php&lt;/strong&gt; file in our HTML &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-HTML&quot; data-lang=&quot;HTML&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My Website&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-UA-Compatible&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;IE=9&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;assets/css/minified.css.php&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- website content --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Have a try and good luck!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating SolidWorks Add-in Simple Installer With WinRAR</title>
   <link href="http://heiswayi.github.io/creating-solidworks-addin-simple-installer-with-winrar.html"/>
   <updated>2015-09-18T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/creating-solidworks-addin-simple-installer-with-winrar</id>
   <content type="html">&lt;p&gt;When I was working as Application Engineer for one of the top SolidWorks Reseller local companies, I was assigned to develop a company&amp;#39;s first SolidWorks Add-in DLL. To make the installation process of the add-in as simple as possible, I opted to use WinRAR SFX and batch scripting to automate the assembly (DLL) registration with Microsoft .NET Framework.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PREREQUISITE:&lt;/strong&gt; This process required a &lt;a href=&quot;http://www.rarlab.com/download.htm&quot;&gt;WinRAR&lt;/a&gt; software to be installed in my PC and prepared my add-in files or folders before I can use WinRAR SFX to create a package installer for my add-in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These are the steps I used to create my add-in package installer using the WinRAR SFX:-&lt;/p&gt;

&lt;h3 id=&quot;step-01&quot;&gt;Step 01&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-001.png&quot; alt=&quot;Step 01&quot;&gt;&lt;/p&gt;

&lt;p&gt;I added all of my add-in files and folders to the WinRAR archive.&lt;/p&gt;

&lt;h3 id=&quot;step-02&quot;&gt;Step 02&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-002.png&quot; alt=&quot;Step 02&quot;&gt;&lt;/p&gt;

&lt;p&gt;Under General tab, I selected &lt;strong&gt;Create SFX archive&lt;/strong&gt; in Archiving options and enter my Archive name. Other options are optional or I just leave it as &lt;strong&gt;defaults&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;step-03&quot;&gt;Step 03&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-003.png&quot; alt=&quot;Step 03&quot;&gt;&lt;/p&gt;

&lt;p&gt;Under Advanced tab, I clicked on &lt;strong&gt;SFX options&lt;/strong&gt; button.&lt;/p&gt;

&lt;h3 id=&quot;step-04&quot;&gt;Step 04&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-004.png&quot; alt=&quot;Step 04&quot;&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;Advanced SFX options&lt;/strong&gt;, under General tab, I entered the Path to extract. In my case, I used &lt;code&gt;C:\IME&lt;/code&gt; as the Absolute path for my add-in installation directory.&lt;/p&gt;

&lt;h3 id=&quot;step-05&quot;&gt;Step 05&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-005.png&quot; alt=&quot;Step 05&quot;&gt;&lt;/p&gt;

&lt;p&gt;Under Setup tab, I entered the filename that I want to run/execute after extraction is finished. In my case, &lt;code&gt;INSTALL64.BAT&lt;/code&gt; is a batch file that I want it to run/execute after the package extraction.&lt;/p&gt;

&lt;h3 id=&quot;step-06&quot;&gt;Step 06&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-006.png&quot; alt=&quot;Step 06&quot;&gt;&lt;/p&gt;

&lt;p&gt;Under Advanced tab, I marked &lt;strong&gt;Request administrative access&lt;/strong&gt; as checked since I need to register my add-in assembly into Microsoft .NET Framework. So, the user will be prompted to run the package installer with administrative access.&lt;/p&gt;

&lt;h3 id=&quot;step-07&quot;&gt;Step 07&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-007.png&quot; alt=&quot;Step 07&quot;&gt;&lt;/p&gt;

&lt;p&gt;Under Update tab, I checked &lt;strong&gt;Extract and replace files&lt;/strong&gt; for Update mode and &lt;strong&gt;Overwrite all files&lt;/strong&gt; for Overwrite mode. This will be useful when in the future time I deliver a new update or release of the current program, the new installation will replace and overwrite all of the old files.&lt;/p&gt;

&lt;h3 id=&quot;step-08&quot;&gt;Step 08&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-008.png&quot; alt=&quot;Step 08&quot;&gt;&lt;/p&gt;

&lt;p&gt;Under Text and icon tab, here I entered the Title of SFX window, Text to display in SFX window and assign the SFX icon/logo.&lt;/p&gt;

&lt;h3 id=&quot;step-09&quot;&gt;Step 09&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-009.png&quot; alt=&quot;Step 09&quot;&gt;&lt;/p&gt;

&lt;p&gt;Finally, under Module tab, I selected the SFX module that I want to use. In my case, I chose &lt;strong&gt;Default.SFX&lt;/strong&gt; - Windows GUI RAR SFX.&lt;/p&gt;

&lt;h3 id=&quot;step-10-final&quot;&gt;Step 10 (Final)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-010.png&quot; alt=&quot;Step 10&quot;&gt;&lt;/p&gt;

&lt;p&gt;Then, I pressed OK and OK again to finish it.&lt;/p&gt;

&lt;h3 id=&quot;viola&quot;&gt;Viola..&lt;/h3&gt;

&lt;p&gt;At the end, I got my add-in package installer (setup.exe) as shown in the picture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-011.png&quot; alt=&quot;Step 11&quot;&gt;&lt;/p&gt;

&lt;p&gt;To test if the file is OK, I tried to run it (double-clicked), it showed up something like this (refer the picture below):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150918/Image-012.png&quot; alt=&quot;Step 12&quot;&gt;&lt;/p&gt;

&lt;p&gt;That means my add-in installer file is working!&lt;/p&gt;

&lt;h3 id=&quot;the-batch-files&quot;&gt;The Batch files&lt;/h3&gt;

&lt;p&gt;I used the batch scripting to automate some commands. If you noticed, there were two batch files in my add-in installation package; &lt;code&gt;INSTALL64.BAT&lt;/code&gt; and &lt;code&gt;UNINSTALL64.BAT&lt;/code&gt;. Both were used for the installation and uninstallation of my SolidWorks Add-in. By using the batch scripting, I can register my add-in assembly into Microsoft .NET Framework so that it will work with the main SolidWorks software.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s the batch script inside the &lt;code&gt;INSTALL64.BAT&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@echo off

set TargetLocation=c:\IME\
set FolderToCopy=IMEInterX64
set FileToCopy1=UNINSTALL64.BAT

echo.
echo 1. Setup configuration data

start &amp;quot;&amp;quot; /d &amp;quot;%~dp0%FolderToCopy%&amp;quot; &amp;quot;addconfigs.exe&amp;quot;

echo #1 DONE
echo.
echo 2. Register assemblies

SET AssemblyPath=&amp;quot;%TargetLocation%%FolderToCopy%\IMEInterX2_SwAddin.dll&amp;quot;
set FMWK=Framework64
IF EXIST &amp;quot;%Windir%\Microsoft.NET\%FMWK%\v4.0.30319&amp;quot; (set FMWKVersion=v4.0.30319) ELSE (set FMWKVersion=v2.0.50727)
echo Detected %FMWK% %FMWKVersion%
echo Running command...
@ECHO ON
&amp;quot;%Windir%\Microsoft.NET\%FMWK%\%FMWKVersion%\regasm&amp;quot; /codebase %AssemblyPath%
@ECHO OFF

echo #2 DONE

echo.
echo INSTALLATION COMPLETE
pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;addconfigs.exe&lt;/code&gt; is a mini program to create and load configuration data into Windows Registry.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;IMEInterX2_SwAddin.dll&lt;/code&gt; is my SolidWorks Add-in program (assembly) that need to be registered (regasm) with Microsoft .NET Framework in order to work in the main SolidWorks software.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-uninstallation-process&quot;&gt;The Uninstallation process&lt;/h3&gt;

&lt;p&gt;Basically, &lt;code&gt;UNINSTALL64.BAT&lt;/code&gt; file is for removing all the add-in files and folders, deleting configuration data in the Windows Registry and finally the file will terminate itself. If I want to create the Uninstaller shortcut for my program, I can do that inside &lt;code&gt;INSTALL64.BAT&lt;/code&gt; file, then link the shortcut to &lt;code&gt;UNINSTALL64.BAT&lt;/code&gt; file when executed.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Everything In One Place</title>
   <link href="http://heiswayi.github.io/everything-in-one-place.html"/>
   <updated>2015-09-14T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/everything-in-one-place</id>
   <content type="html">&lt;p&gt;Nowadays, I started to use GitHub for almost everything. Time to time, my &lt;strong&gt;GitHub repositories&lt;/strong&gt; (repos) and &lt;strong&gt;GitHub gists&lt;/strong&gt; will keep increasing. Having so many repos and gists will make it harder for me or other people to browse through the old projects/snippets.&lt;/p&gt;

&lt;p&gt;So, to make them easy on the eyes, I created a simple view of listing page for both of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Repositories:&lt;/strong&gt; &lt;a href=&quot;http://heiswayi.github.io/my-repos/&quot;&gt;&lt;strong&gt;http://heiswayi.github.io/my-repos&lt;/strong&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/heiswayi/my-repos&quot;&gt;source code&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GitHub Gists:&lt;/strong&gt; &lt;a href=&quot;http://heiswayi.github.io/my-gists/&quot;&gt;&lt;strong&gt;http://heiswayi.github.io/my-gists&lt;/strong&gt;&lt;/a&gt; (&lt;a href=&quot;https://github.com/heiswayi/my-gists&quot;&gt;source code&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I used &lt;a href=&quot;https://developer.github.com/v3/&quot;&gt;GitHub API&lt;/a&gt; to retrieve the data and populate them with JavaScript into HTML layout. As simple as it should be.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Plain</title>
   <link href="http://heiswayi.github.io/the-plain.html"/>
   <updated>2015-09-10T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/the-plain</id>
   <content type="html">&lt;p&gt;Introducing &lt;strong&gt;The Plain&lt;/strong&gt;, a minimalist Jekyll theme that focuses on writing matters. A great theme for &lt;em&gt;personal blog&lt;/em&gt; use. Built using &lt;strong&gt;Sass&lt;/strong&gt; with automatically compressed the compiled CSS. Plus, the site&amp;#39;s HTML code also are compressed automatically on-the-fly using a &lt;strong&gt;Jekyll layout&lt;/strong&gt; made by &lt;a href=&quot;http://jch.penibelst.de/&quot;&gt;Anatol Broder&lt;/a&gt;. This theme uses &lt;a href=&quot;https://github.com/mozilla/Fira&quot;&gt;Fira Sans font&lt;/a&gt; by Mozilla.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150910/the-plain.png&quot; alt=&quot;Screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://heiswayi.github.io/the-plain/&quot;&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;https://github.com/heiswayi/the-plain&quot;&gt;Source Code on GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;install-on-your-github-pages&quot;&gt;Install on your GitHub Pages&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/heiswayi/the-plain/archive/master.zip&quot;&gt;Download&lt;/a&gt; or &lt;a href=&quot;https://github.com/heiswayi/the-plain/fork&quot;&gt;fork&lt;/a&gt; the master branch of the repo into your GitHub account.&lt;/li&gt;
&lt;li&gt;Rename the repo into something like &lt;code&gt;username.github.io&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Edit &lt;code&gt;_config.yml&lt;/code&gt; file to your preferences.&lt;/li&gt;
&lt;li&gt;Edit &lt;code&gt;about.md&lt;/code&gt; file for your About page.&lt;/li&gt;
&lt;li&gt;Inside &lt;code&gt;_posts&lt;/code&gt; folder, there are sample of blog entries. Learn from it and start yours.&lt;/li&gt;
&lt;li&gt;Now visit &lt;code&gt;http://&amp;lt;your_username&amp;gt;.github.io&lt;/code&gt; and you should see your blog is running.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you use this theme as a &lt;strong&gt;project page&lt;/strong&gt;, you can skip step (2). But, inside &lt;code&gt;_config.yml&lt;/code&gt; file, you need to put your repo name in &lt;code&gt;baseurl&lt;/code&gt;, for example &lt;code&gt;baseurl: &amp;quot;/myproject&amp;quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question/Problem?&lt;/strong&gt; Ask me or report it &lt;a href=&quot;https://github.com/heiswayi/the-plain/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Developing WPF Application Using MVVM Design Pattern</title>
   <link href="http://heiswayi.github.io/developing-wpf-application-using-mvvm-design-pattern.html"/>
   <updated>2015-09-02T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/developing-wpf-application-using-mvvm-design-pattern</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150902/pht.png&quot; alt=&quot;Password Hashing Tool&quot;&gt;&lt;/p&gt;

&lt;p&gt;In this post, I&amp;#39;ll try my best to explain about an implementation of MVVM design pattern in a WPF application development. This tutorial is based on my sample WPF MVVM application project known as &lt;strong&gt;Password Hashing Tool&lt;/strong&gt;. The full source code for the project can be downloaded &lt;a href=&quot;https://github.com/heiswayi/SimpleOneWayHashing&quot;&gt;here&lt;/a&gt;. Let&amp;#39;s begin!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;let-39-s-start-with-an-introduction-to-wpf&quot;&gt;Let&amp;#39;s start with an introduction to WPF&lt;/h3&gt;

&lt;p&gt;Talking about software and programming, in the year 2006, I started to learn and developed my first Windows-based application. At that time, I used &lt;strong&gt;VB6&lt;/strong&gt; - the most used programming language on the planet and then Microsoft killed it. My interest to programming continued as I learned a new high-level programming language in the year 2009 for developing Windows-based applications which is called &lt;strong&gt;C#&lt;/strong&gt;. During that time, most of my applications had been built with C# using &lt;strong&gt;WinForms&lt;/strong&gt; - a graphical (GUI) class library to write rich client applications.&lt;/p&gt;

&lt;p&gt;However, as the technology started aging faster, the software requirements started to require more special features. At this time, WinForms wasn&amp;#39;t able to catch up with the requirements due to its limitations in term of features and performance, unless it was just enough for simple, small and basic applications. So, in the last two years, I started using &lt;strong&gt;Windows Presentation Foundation (WPF)&lt;/strong&gt; - a graphical subsystem for rendering UI in Windows-based applications by Microsoft for software development.&lt;/p&gt;

&lt;p&gt;Then I started to love WPF because it is now the current platform for developing Windows desktop applications. It&amp;#39;s modern, advanced, hardware-accelerated framework for developing applications that maintain separation of concerns. It supports advanced rendering of 2D vector and 3D graphics, providing an immense range of capabilities for building rich, interactive and quality user interfaces.&lt;/p&gt;

&lt;h3 id=&quot;introduction-to-mvvm-design-pattern&quot;&gt;Introduction to MVVM design pattern&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;Model View ViewModel (MVVM)&lt;/strong&gt; is an architectural pattern used in software development that originated from &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/hh848246.aspx&quot;&gt;Microsoft&lt;/a&gt;, which is from the WPF creator itself. It&amp;#39;s a variation of &lt;a href=&quot;http://www.martinfowler.com/eaaDev/PresentationModel.html&quot;&gt;Martin Fowler&amp;#39;s Presentation Model&lt;/a&gt; design pattern and it&amp;#39;s based on a derivation of the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ff649643.aspx&quot;&gt;Model-View-Controller (MVC)&lt;/a&gt; pattern.&lt;/p&gt;

&lt;h3 id=&quot;wpf-xaml-mvvm&quot;&gt;WPF + XAML + MVVM&lt;/h3&gt;

&lt;p&gt;MVVM facilitates a separation of the development of the GUI from the development of the business logic or back-end logic (the data model). It&amp;#39;s targeted at modern UI development platforms (WPF and Silverlight) in which there is a UX developer who has different requirements than a more &amp;quot;traditional&amp;quot; developer. With MVVM, it allows you to keep your code clean and easy to maintain. MVVM is a way of creating client applications that leverages core features of the WPF platform while allows for simple unit testing of application functionality and helps developers and designers work together with less technical difficulties.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Model&lt;/strong&gt; - A Model is a simple class object that hold data. It should only contain properties and property validation. It&amp;#39;s &lt;strong&gt;not responsible&lt;/strong&gt; for getting data, saving data, click events, complex calculations, business rules, or any of that stuff.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;View&lt;/strong&gt; - A View is the UI used to display data defined in XAML and should not have any logic in the code-behind. In most cases, it can be DataTemplates which is simply a template that tells the application how to display a class. It binds to the ViewModel by only using data-binding. It&amp;#39;s OK to put code behind your view &lt;strong&gt;if&lt;/strong&gt; that code is related to the View only, such as setting focus or running animations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ViewModel&lt;/strong&gt; - A ViewModel is where the magic happens. This is where the majority of your code-behind goes such as data access, click events, complex calculations, business rules validation, etc. It&amp;#39;s typically built to reflect the View. It&amp;#39;s an abstraction of the View that exposes public properties and commands.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;why-mvvm&quot;&gt;Why MVVM?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Collaboration&lt;/strong&gt; - Programmers and non-programmers (designers) can work together easily.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reliability&lt;/strong&gt; - The code is testable (unit testing) to maintain the consistency of code quality.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flexibility&lt;/strong&gt; - It&amp;#39;s much easier to change view without messing with the rest of the code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code Friendly&lt;/strong&gt; - With a good separation between Model, UI and logic (code-behind), it makes easier for other people to understand overall process in order to take over the project, make improvements or debug it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;let-39-s-have-a-look-on-quot-password-hashing-tool-quot-project&quot;&gt;Let&amp;#39;s have a look on &amp;quot;Password Hashing Tool&amp;quot; project&lt;/h3&gt;

&lt;p&gt;OK, here&amp;#39;s how the Tree View for directories and files looked like inside the project.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Solution &amp;#39;SimpleOneWayHashing&amp;#39; (1 project)
└── SimpleOneWayHashing
    ├── Properties
    ├── References
    ├── Commands
    |   ├── CommandReference.cs
    |   └── DelegateCommand.cs
    ├── Models
    |   └── HashingModel.cs
    ├── Themes
    |   └── Metro
    |       ├── Metro.MSControls.Core.Implicit.xaml
    |       ├── Metro.MSControls.Toolkit.Implicit.xaml
    |       ├── Styles.Shared.xaml
    |       ├── Styles.WPF.xaml
    |       └── Theme.Colors.xaml
    ├── ViewModels
    |   ├── HashingViewModel.cs
    |   └── ViewModelBase.cs
    ├── Views
    |   └── HasherView.xaml
    |       └── HasherView.xaml.cs
    ├── App.config
    ├── App.xaml
    |   └── App.xaml.cs
    └── ClassDiagram1.cd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I used Visual Studio 2013 to develop the &amp;quot;Password Hashing Tool&amp;quot; project but the solution and project files are named as &lt;code&gt;SimpleOneWayHashing&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As can be seen in the Tree View above, there are primary folders called &lt;strong&gt;Models&lt;/strong&gt;, &lt;strong&gt;ViewModels&lt;/strong&gt;, and &lt;strong&gt;Views&lt;/strong&gt;. This is how we basically separate between the GUI and the logics. There are a lot of online resources for MVVM, each with their own way of implementing the design pattern. As the development grows, we will have more folders. This is to ensure our project looks organized and clean.&lt;/p&gt;

&lt;p&gt;I created another folder called &lt;strong&gt;Commands&lt;/strong&gt;. Inside this folder, there are some helper classes related to the use of &lt;code&gt;ICommand&lt;/code&gt;. Let&amp;#39;s skip this one first.&lt;/p&gt;

&lt;h4 id=&quot;let-39-s-start-with-the-model-first&quot;&gt;Let&amp;#39;s start with the Model first&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    ├── Models
    |   └── HashingModel.cs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is how the code looked like inside &lt;code&gt;HashingModel.cs&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Security.Cryptography&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.Models&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HashingModel&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#region Private Members&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appTitle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;One-Way Password Hashing&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;

        &lt;span class=&quot;cp&quot;&gt;#region Constructor&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HashingModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_plainText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_plainText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HashingModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;

        &lt;span class=&quot;cp&quot;&gt;#region Public Properties and Methods&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AppTitle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ComputingResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;UTF8Encoding&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UTF8Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;textWithSaltBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;HashAlgorithm&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasher&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SHA1CryptoServiceProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashedBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComputeHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textWithSaltBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;hasher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hashedBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The class contains private members, public properties and methods. As you can see, &lt;code&gt;ComputingResult()&lt;/code&gt; is a method I used to compute a hash from &lt;code&gt;PlainText&lt;/code&gt; and &lt;code&gt;Salt&lt;/code&gt; properties, then return the result to &lt;code&gt;result&lt;/code&gt; property. This class uses its own &lt;strong&gt;namespace&lt;/strong&gt; called &lt;code&gt;SimpleOneWayHashing.Models&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;the-viewmodel&quot;&gt;The ViewModel&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    ├── ViewModels
    |   ├── HashingViewModel.cs
    |   └── ViewModelBase.cs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside &lt;strong&gt;ViewModels&lt;/strong&gt; folder, there are two files; &lt;code&gt;HashingViewMode.cs&lt;/code&gt; and &lt;code&gt;ViewModelBase.cs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Inside &lt;code&gt;ViewModelBase.cs&lt;/code&gt;, there is a helper class which inherits &lt;code&gt;INotifyPropertyChanged&lt;/code&gt; interface.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.ComponentModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.ViewModels&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// Provides common functionality for ViewModel class&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ViewModelBase&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INotifyPropertyChanged&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PropertyChangedEventHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;PropertyChangedEventHandler&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PropertyChangedEventArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propertyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;HashingViewMode.cs&lt;/code&gt; is where it contains all the logics for this &amp;quot;Password Hashing Tool&amp;quot; program to work with the View.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.Commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.Models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.ViewModels&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HashingViewModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewModelBase&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#region Private Members&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HashingModel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DelegateCommand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computeHashCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DelegateCommand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clearTextBoxCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashingTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computedHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;

        &lt;span class=&quot;cp&quot;&gt;#region Constructor&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HashingViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashingModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;hashingTitle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AppTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;computedHash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;

        &lt;span class=&quot;cp&quot;&gt;#region Public Properties&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashingTitle&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashingTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComputedHash&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computedHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;computedHash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ComputedHash&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;

        &lt;span class=&quot;cp&quot;&gt;#region Commands&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICommand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComputeHashCommand&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;computeHashCommand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;computeHashCommand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DelegateCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComputeHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CanComputeHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;computeHashCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CanComputeHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ComputeHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;hashing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComputingResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ComputedHash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICommand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClearTextBoxCommand&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clearTextBoxCommand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;clearTextBoxCommand&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DelegateCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ClearTextBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clearTextBoxCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ClearTextBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlainText&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;PlainText&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;OnPropertyChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Salt&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComputedHash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;cp&quot;&gt;#endregion&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ViewModelBase.cs&lt;/code&gt; and &lt;code&gt;HashingViewModel.cs&lt;/code&gt; are using the same namespace &lt;code&gt;SimpleOneWayHashing.ViewModels&lt;/code&gt;. As you can see from the source code above, there is a class called &lt;code&gt;HashingViewModel&lt;/code&gt; which inherits from &lt;code&gt;ViewModelBase&lt;/code&gt; class. Since they both are using the same namespace, so I don&amp;#39;t need to include it via &lt;code&gt;using&lt;/code&gt;, but not for the Model and &lt;code&gt;ICommand&lt;/code&gt; interface helper class.&lt;/p&gt;

&lt;p&gt;The Model and &lt;code&gt;ICommand&lt;/code&gt; interface helper class are using different classes and namespaces. So, I need to include them like this in &lt;code&gt;HashingViewModel.cs&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.Commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.Models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Overall, this is the code structure inside &lt;code&gt;HashingViewModel.cs&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.Commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.Models&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.ViewModels&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HashingViewModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewModelBase&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Private Members&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Constructor&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Public Properties&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Commands&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;next-is-the-view&quot;&gt;Next is the View&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    ├── Views
    |   └── HasherView.xaml
    |       └── HasherView.xaml.cs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For this project, I just have one View file only &lt;code&gt;HasherView.xaml&lt;/code&gt;. This is usually our &lt;strong&gt;MainWindow.xaml&lt;/strong&gt;. OK, I don&amp;#39;t use &lt;code&gt;DataTemplate&lt;/code&gt; here. Here&amp;#39;s how the XAML code looked like inside &lt;code&gt;HasherView.xaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Window&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;SimpleOneWayHashing.Views.HasherView&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;xmlns:local=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;clr-namespace:SimpleOneWayHashing.ViewModels&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;WindowStartupLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;CenterScreen&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;Title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding HashingTitle}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;400&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;400&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Grid&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;StackPanel&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Vertical&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Enter your plain password:&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBox&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;PlainText&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Auto&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;HorizontalAlignment=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Stretch&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding Path=PlainText, UpdateSourceTrigger=PropertyChanged}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Enter your password salt (anything, whatever):&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0,10,0,0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBox&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Salt&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Auto&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;HorizontalAlignment=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Stretch&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding Path=Salt, UpdateSourceTrigger=PropertyChanged}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;Grid&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0,10,0,0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;Grid.ColumnDefinitions&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ColumnDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ColumnDefinition&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Grid.ColumnDefinitions&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Get Hash&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Grid.Column=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Command=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding Path=ComputeHashCommand}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Clear TextBox&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Grid.Column=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Command=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding Path=ClearTextBoxCommand}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Grid&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hashed String:&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0,10,0,0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBox&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HashedString&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Auto&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;HorizontalAlignment=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Stretch&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{Binding Path=ComputedHash, Mode=OneWay}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;IsReadOnly=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;True&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;GroupBox&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Header=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Information&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0,10,0,0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;TextBlock&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;TextWrapping=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Wrap&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Margin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                    This is a sample of MVVM-based WPF application with a simple algorithm to generate a very strong one-way password hashing.
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/TextBlock&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/GroupBox&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/StackPanel&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Grid&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Window&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As can be seen there I used &amp;quot;Binding&amp;quot; to bind with the Model and ViewModel. Below is how the &lt;strong&gt;untouched&lt;/strong&gt; code-behind of &lt;code&gt;HasherView.xaml.cs&lt;/code&gt; looked like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Controls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Documents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Media&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Media.Imaging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows.Shapes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing.Views&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// Interaction logic for HasherView.xaml&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HasherView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Window&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;HasherView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;InitializeComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;icommand-interface-helper-class&quot;&gt;ICommand interface helper class&lt;/h4&gt;

&lt;p&gt;There is another new class here called &lt;code&gt;DelegateCommand&lt;/code&gt;, basically inherits from &lt;code&gt;ICommand&lt;/code&gt; interface. This helper class is essential for MVVM to work. It&amp;#39;s a command that is meant to be executed by other classes to run code in this class by invoking delegates. Some people may called it the &lt;strong&gt;RelayCommand&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    ├── Commands
    |   ├── CommandReference.cs
    |   └── DelegateCommand.cs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside this &amp;quot;Password Hashing Tool&amp;quot; project, there are two files in the &lt;strong&gt;Commands&lt;/strong&gt; folder; &lt;a href=&quot;https://github.com/heiswayi/SimpleOneWayHashing/blob/master/Commands/CommandReference.cs&quot;&gt;CommandReference.cs&lt;/a&gt; and &lt;a href=&quot;https://github.com/heiswayi/SimpleOneWayHashing/blob/master/Commands/DelegateCommand.cs&quot;&gt;DeletegateCommand.cs&lt;/a&gt;. The source code of both helper classes are well-documented, self-explainable and easily reusable for your MVVM project as well.&lt;/p&gt;

&lt;h4 id=&quot;finally-starting-the-application&quot;&gt;Finally, starting the application&lt;/h4&gt;

&lt;p&gt;This is usually known as &lt;code&gt;App.xaml&lt;/code&gt; file. Since my project has &lt;strong&gt;Themes&lt;/strong&gt; folder where it contains the XAML theme files, so this is how I created the resources inside &lt;code&gt;App.xaml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Application&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;x:Class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;SimpleOneWayHashing.App&amp;quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;xmlns:x=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;Startup=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Application_Startup&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Application.Resources&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ResourceDictionary&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;ResourceDictionary.MergedDictionaries&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;ResourceDictionary&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Source=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Themes/Metro/Metro.MSControls.Core.Implicit.xaml&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;ResourceDictionary&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Source=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Themes/Metro/Metro.MSControls.Toolkit.Implicit.xaml&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ResourceDictionary.MergedDictionaries&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ResourceDictionary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Application.Resources&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Application&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But, to start the application, this is the code snippet I used which can be found in the code-behind of the startup file: &lt;code&gt;App.xaml.cs&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HasherView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HasherView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewModels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HashingViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is how overall code looked like in &lt;code&gt;App.xaml.cs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Windows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SimpleOneWayHashing&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// Interaction logic for App.xaml&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Application&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Application_Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StartupEventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Create the ViewModel and expose it using the View&amp;#39;s DataContext&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HasherView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HasherView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataContext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ViewModels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HashingViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Well, this is how &amp;quot;Password Hashing Tool&amp;quot; application has been developed with MVVM design pattern. This is one of the ways implementing MVVM design pattern in a project. Different people use different way implementing the MVVM design pattern. If you &lt;em&gt;google&lt;/em&gt; around, there are a lot of resources about the implementation of MVVM design pattern available online, from the basic or simpler version to the advanced, larga-scale development.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t forget to &lt;a href=&quot;https://github.com/heiswayi/SimpleOneWayHashing/archive/master.zip&quot;&gt;download the source code&lt;/a&gt; for this &amp;quot;Password Hashing Tool&amp;quot; project in my &lt;a href=&quot;https://github.com/heiswayi/SimpleOneWayHashing&quot;&gt;GitHub repo&lt;/a&gt; first and try to go through the code. It&amp;#39;s much easier for you to understand how it works. I think the source code are explainable enough. If you want to implement MVVM in your project, you may use this project as a starter or you may reuse some of the code inside as the code snippets.&lt;/p&gt;

&lt;p&gt;You also can start developing your own MVVM application with &lt;a href=&quot;https://catelproject.atlassian.net/wiki/display/CTL/MVVM+framework+comparison+sheet&quot;&gt;MVVM frameworks&lt;/a&gt; that available online and free.&lt;/p&gt;

&lt;hr&gt;

&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.c-sharpcorner.com/UploadFile/raj1979/simple-mvvm-pattern-in-wpf/&quot;&gt;Simple MVVM Pattern in WPF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.c-sharpcorner.com/uploadfile/nipuntomar/mvvm-in-wpf/&quot;&gt;MVVM in WPF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rachel53461.wordpress.com/2011/05/08/simplemvvmexample/&quot;&gt;A Simple MVVM Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Model_View_ViewModel&quot;&gt;Wikipedia: Model View ViewModel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1337345/what-is-the-difference-between-wpf-and-winforms&quot;&gt;What is the difference between WPF and WinForms?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2653096/why-use-mvvm&quot;&gt;Why use MVVM?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.codeproject.com/Tips/813345/Basic-MVVM-and-ICommand-Usage-Example&quot;&gt;Basic MVVM and ICommand Usage Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dzone.com/articles/most-developers-use-mvvm&quot;&gt;Most Developers Use MVVM Incorrectly. Are You?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>XAML - Better Way To Scale Icon In Path</title>
   <link href="http://heiswayi.github.io/xaml-better-way-to-scale-icon-in-path.html"/>
   <updated>2015-08-18T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/xaml-better-way-to-scale-icon-in-path</id>
   <content type="html">&lt;p&gt;Creating an icon in XAML gives us a flexibility in our software UI development. The best tool to do that is &lt;a href=&quot;http://www.microsoft.com/en-my/download/details.aspx?id=36180&quot;&gt;Microsoft Expression Design 4&lt;/a&gt;. The ability to export the design into any popular format such as BMP, JPG, PNG, XAML, etc. is a beautiful feature. Assuming we have designed our icon and exported it into XAML in order to get the &lt;code&gt;StreamGeometry&lt;/code&gt; mini-language. Then, we can use this &lt;code&gt;StreamGeometry&lt;/code&gt; data for &lt;code&gt;Data&lt;/code&gt; property in a &lt;code&gt;Path&lt;/code&gt; element.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150818/ScaleTransform.png&quot; alt=&quot;Using ScaleTransform&quot;&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s say the original dimension of the designed icon is 44x44 pixels and we need to scale it bigger to fit our development requirements. INSTEAD of using &lt;code&gt;ScaleTransform&lt;/code&gt; element from the &lt;code&gt;Path.RenderTransform&lt;/code&gt; element just to make the icon size bigger, it&amp;#39;s BETTER to assign directly the &lt;code&gt;Width&lt;/code&gt;, &lt;code&gt;Height&lt;/code&gt; and &lt;code&gt;Stretch&lt;/code&gt; property in the &lt;code&gt;Path&lt;/code&gt; element.&lt;/p&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;p&gt;Instead of this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;White&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Data=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;F1 M 22.9583,31.6667C 24.27, ..., ..., ... Z &amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Path.RenderTransform&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ScaleTransform&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ScaleX=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ScaleY=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Path.RenderTransform&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Path&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Change it to use something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Path&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;100&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Stretch=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Uniform&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Fill=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;White&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Data=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;F1 M 22.9583,31.6667C 24.27,31.6667 25.3333,32.73 25.3333,34.0417L 25.3333, ..., ..., ... Z &amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150818/PathIconScale.png&quot; alt=&quot;Using Path icon scale&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;Stretch=&amp;quot;Uniform&amp;quot;&lt;/code&gt; property makes the &lt;code&gt;Path&lt;/code&gt; element (the icon) can be scaled up or down with a correct ratio.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is the sample of mini-language (the &lt;code&gt;StreamGeometry&lt;/code&gt; data) for the &lt;strong&gt;Android&lt;/strong&gt; icon I used:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;F1 M 22.9583,31.6667C 24.27,31.6667 25.3333,32.73 25.3333,34.0417L 25.3333,43.5417C 25.3333,44.8533 24.27,45.9167 22.9583,45.9167C 21.6467,45.9167 20.5833,44.8533 20.5833,43.5417L 20.5833,34.0417C 20.5833,32.73 21.6467,31.6667 22.9583,31.6667 Z M 53.0416,31.6667C 54.3533,31.6667 55.4166,32.73 55.4166,34.0417L 55.4166,43.5417C 55.4166,44.8533 54.3533,45.9167 53.0416,45.9167C 51.7299,45.9167 50.6666,44.8533 50.6666,43.5417L 50.6666,34.0417C 50.6666,32.73 51.7299,31.6667 53.0416,31.6667 Z M 26.9166,31.6667L 49.0833,31.6667L 49.0833,48.2917C 49.0833,49.6034 48.02,50.6667 46.7083,50.6667L 44.3333,50.6667L 44.3333,55.4167C 44.3333,56.7284 43.27,57.7917 41.9583,57.7917C 40.6466,57.7917 39.5833,56.7284 39.5833,55.4167L 39.5833,50.6667L 36.4166,50.6667L 36.4166,55.4167C 36.4166,56.7284 35.3533,57.7917 34.0416,57.7917C 32.73,57.7917 31.6666,56.7284 31.6666,55.4167L 31.6667,50.6667L 29.2916,50.6667C 27.98,50.6667 26.9166,49.6034 26.9166,48.2917L 26.9166,31.6667 Z M 29.6875,19C 29.9967,18.6909 30.4979,18.6909 30.8071,19L 33.402,21.595C 34.8777,20.9478 36.4641,20.5834 38,20.5834C 39.5494,20.5834 41.1502,20.9543 42.637,21.6122L 45.2491,19C 45.5583,18.6909 46.0596,18.6909 46.3687,19C 46.6779,19.3092 46.6779,19.8105 46.3687,20.1196L 44.1084,22.38C 46.9524,24.1057 49.0833,26.9132 49.0833,30.0834L 26.9166,30.0834C 26.9166,26.9002 29.065,24.0827 31.9266,22.3588L 29.6875,20.1196C 29.3783,19.8105 29.3783,19.3092 29.6875,19 Z M 34.0417,24.5417C 33.1672,24.5417 32.4583,25.2506 32.4583,26.125C 32.4583,26.9995 33.1672,27.7083 34.0417,27.7083C 34.9161,27.7083 35.625,26.9995 35.625,26.125C 35.625,25.2506 34.9161,24.5417 34.0417,24.5417 Z M 41.9583,24.5417C 41.0839,24.5417 40.375,25.2505 40.375,26.125C 40.375,26.9995 41.0839,27.7083 41.9583,27.7083C 42.8328,27.7083 43.5417,26.9995 43.5417,26.125C 43.5417,25.2505 42.8328,24.5417 41.9583,24.5417 Z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The reason I&amp;#39;m writing about this because I found out that some people use the &lt;code&gt;ScaleTransform&lt;/code&gt; element just to resize the icon. This is not the best method when if we intend to keep the icon ratio resized proportionally. Unless we don&amp;#39;t care about the scale ratio at all. Since there is a simpler method, why not we apply it as a standard, so we can reduce the probability of human errors. Resizing the icon requires it to keep its scale ratio in order to maintain its shape correctly.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PHP - Encryption, Decryption And Password Hashing</title>
   <link href="http://heiswayi.github.io/php-encryption-decryption-and-password-hashing.html"/>
   <updated>2015-08-17T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/php-encryption-decryption-and-password-hashing</id>
   <content type="html">&lt;p&gt;These days, people are browsing the web a lot. Some of them may be doing their business at risk when they are using a web application that is weakly built in protecting its user&amp;#39;s data or confidential information. It doesn&amp;#39;t matter how simple or complicated, small or big the application is, when it involves keeping the user&amp;#39;s data, we (the developers) need to take care their information well and ensure their data are safe with our application. One way to do that is by encrypting the data before we save it.&lt;/p&gt;

&lt;p&gt;In PHP, there are many methods that we can encrypt the information. These code snippets are ones that I commonly used in my application to ensure their confidential information are not easily been disclosed.&lt;/p&gt;

&lt;h3 id=&quot;encryption&quot;&gt;Encryption&lt;/h3&gt;

&lt;p&gt;This is a PHP function used to encrypt the data string.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mt_rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$iv&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$ct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mcrypt_encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MCRYPT_RIJNDAEL_128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MCRYPT_MODE_CBC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$iv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;base64_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Salted__&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;example-of-usage&quot;&gt;Example of Usage&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myPass123&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Welcome to Flippancy 25&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Output: U2FsdGVkX19LYv5Y5EDmFbjH8bGMDFwlid30h2x1ybibT1Dwp0vekJ0OT4tb7/j6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The special feature here is, every time I execute this function &lt;code&gt;Encrypt()&lt;/code&gt;, by using the &lt;strong&gt;same&lt;/strong&gt; password and &lt;strong&gt;same&lt;/strong&gt; data, the encrypted string is always changed.&lt;/p&gt;

&lt;p&gt;Here is the output examples of encrypted strings after I executed it for three times:-&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Output 1: U2FsdGVkX19LYv5Y5EDmFbjH8bGMDFwlid30h2x1ybibT1Dwp0vekJ0OT4tb7/j6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Output 2: U2FsdGVkX1/3zxJCcE8p89t67nJNp8blNkezNxTVn4IDFQLM755K2+OSfFHewDLI&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Output 3: U2FsdGVkX18OQ8puUN8BBi+d6vAjEzDTZqM2WaKQD1atOykkYl9MY7NQM1DqI4Kw&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hence, even the encrypted strings are changed each time I executed the function for the same input data, but these three encrypted strings are still can be decrypted and output the &lt;strong&gt;same&lt;/strong&gt; results. This is the uniqueness of this encryption function.&lt;/p&gt;

&lt;h3 id=&quot;decryption&quot;&gt;Decryption&lt;/h3&gt;

&lt;p&gt;To get back the original data string, we need the decryption function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;base64_decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$ct&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$iv&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$pt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mcrypt_decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MCRYPT_RIJNDAEL_128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MCRYPT_MODE_CBC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$iv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;example-of-usage&quot;&gt;Example of Usage&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myPass123&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;U2FsdGVkX19LYv5Y5EDmFbjH8bGMDFwlid30h2x1ybibT1Dwp0vekJ0OT4tb7/j6&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myPass123&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;U2FsdGVkX1/3zxJCcE8p89t67nJNp8blNkezNxTVn4IDFQLM755K2+OSfFHewDLI&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myPass123&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;U2FsdGVkX18OQ8puUN8BBi+d6vAjEzDTZqM2WaKQD1atOykkYl9MY7NQM1DqI4Kw&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// All of three above will output the same decrypted data: Welcome to Flippancy 25&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see, for each encryption and decryption, the correct password/passcode is required in order to get back the original data strings.&lt;/p&gt;

&lt;h3 id=&quot;application-of-data-encryption-and-decryption&quot;&gt;Application of Data Encryption and Decryption&lt;/h3&gt;

&lt;p&gt;These both PHP encryption and decryption functions are useful when we want to securely encrypt user&amp;#39;s confidential information such as Social Security number, Phone number, Bank Account number, Credit Card information, whatnot and at some points of time, we need it back in plain text or the original version of the data.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Using these functions for saving passwords are NOT RECOMMENDED as it is reversible (ability to be decrypted). Check the next topic!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;password-hashing&quot;&gt;Password Hashing&lt;/h3&gt;

&lt;p&gt;Despite encryption and decryption of the data, another part that plays important role in our application development is password hashing. The best implementation in password hashing is to use &lt;strong&gt;&lt;em&gt;one-way&lt;/em&gt;&lt;/strong&gt; hashing technique. Meaning that, it is irreversible. Unlikely the encryptions, they are formulated to be able to be decrypted it back. The password is encrypted and hashed for one-time only and it is no longer can be decrypted to a plain text anymore. You may want to check &lt;a href=&quot;http://php.net/manual/en/function.password-hash.php&quot;&gt;password_hash&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.crypt.php&quot;&gt;crypt&lt;/a&gt; for PHP one-way hashing algorithms.&lt;/p&gt;

&lt;p&gt;In my projects, I usually use this hashing function to hash the user&amp;#39;s password:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hashPassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$hash_password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SHA512&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;base64_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_rot13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SHA512&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_rot13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hash_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;example-of-usage&quot;&gt;Example of Usage&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hashPassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myPa55w0rd&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Flipp@ncy25&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Output: 815890bb72e10a75a52087513a931afb6641a5d8d105365fa6f389f038dd81b45290a44cf94bb61e7741e073c6f4d59a16e9896bd197cc320f84f3a4d27cfb50&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr&gt;

&lt;p&gt;For more details about password hashing, I &lt;strong&gt;recommended&lt;/strong&gt; you to read &lt;a href=&quot;https://crackstation.net/hashing-security.htm&quot;&gt;this article&lt;/a&gt;. It&amp;#39;s a really good article about salted password hashing.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Turning My Fragment Of Memories Into Digital Information</title>
   <link href="http://heiswayi.github.io/my-own-artificial-intelligence-program.html"/>
   <updated>2015-08-11T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/my-own-artificial-intelligence-program</id>
   <content type="html">&lt;h3 id=&quot;the-long-time-dream&quot;&gt;The Long Time Dream&lt;/h3&gt;

&lt;p&gt;Ten years ago, I had a dream to have my own artificial intelligence program. That dream started when I was an active user of &lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_Relay_Chat&quot;&gt;Internet Relay Chat (IRC)&lt;/a&gt; network. There was no Facebook yet at that time. Instead of chatting around, I also was an IRC scripter. I had a scripting group and a bunch of scripters that loved to write the IRC script. We learned each other and coded the script in &lt;a href=&quot;http://www.mirc.com/&quot;&gt;mIRC&lt;/a&gt;, an IRC program for more fun in the IRC network. Some of us published their scripts on the Internet for other people to download and use it. I had my sweet time where I loved participating in war scripting or revenge war, a game to test how powerful your IRC script was. Until today, I still keep my latest three IRC scripts for my nostalgia purpose.&lt;/p&gt;

&lt;p&gt;Being an IRC scripter has made me to become more creative person. Instead of coding the script just to take care of my IRC channels, I also coded the script that turned it into an IRC bot. A quiz bot, a chatter bot or a war bot. We built them all. From the development of IRC chatter bot I started to have my curiosity to make it more intelligence and having the ability to learn from the user interaction. I had built one, but there was no standard markup language. Just one to one input-output responses.&lt;/p&gt;

&lt;p&gt;Well, after some years had passed, when a new era of Facebook started to surface, the popularity of IRC started to decline as many IRC users started leaving the network. Most of the IRC channels started to become the ghost channel. I started losing my friends and I took a decision to stop using the IRC too. Everything I knew in the IRC was faded away into a piece of memories. So nostalgic to remind it today. Well, in case you might know me in the past, these are my IRC nicknames I ever used as far as I remembered; &lt;em&gt;Nalika&lt;/em&gt;, &lt;em&gt;HangKalaH&lt;/em&gt;, &lt;em&gt;atuk&lt;/em&gt;, &lt;em&gt;Nikotin3&lt;/em&gt;, and &lt;em&gt;Y-E&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Since I was no longer using IRC, my script, my chatter bot had been kept away and deprecated. Then, the time flies...&lt;/p&gt;

&lt;h3 id=&quot;the-returning-of-the-old-dream&quot;&gt;The Returning of the Old Dream&lt;/h3&gt;

&lt;h4 id=&quot;my-first-ai-chatbot-using-aiml&quot;&gt;&lt;strong&gt;My First AI Chatbot using AIML&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;A couple of years ago, the old dream came back. Since I worked in .NET C# and PHP, I had been thinking about developing the chatter bot project again. At first, I tried to build many prototypes from scratch in C# using basic input-output responses and came out with the latest version of prototypes which was quite good enough, but not so that natural to me. By using SQLite to save each input and its output response made it looked like a standard knowledge base program because I needed to key in each possible exact input and its response respectively. Then, I stopped developing it and ignore the project.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://heiswayi.github.io/images/20150811/nalika1.png&quot;&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150811/nalika1.png&quot; alt=&quot;WAYI v1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://heiswayi.github.io/images/20150811/nalika2.png&quot;&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150811/nalika2.png&quot; alt=&quot;WAYI v1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://heiswayi.github.io/images/20150811/nalika3.png&quot;&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150811/nalika3.png&quot; alt=&quot;WAYI v1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After some time passed, I was thinking to develop the project again, but this time I was looking for an existing framework. So, I started researching around the Internet and found the first framework to start with. It was called &lt;a href=&quot;http://www.alicebot.org/aiml.html&quot;&gt;Artificial Intelligence Markup Language (AIML)&lt;/a&gt;. It is a standard XML format for defining a chat bot&amp;#39;s responses. AIML was developed by &lt;strong&gt;Richard S. Wallace&lt;/strong&gt; and a worldwide free software community between 1995 and 2002. AIML formed the basis for what was initially a highly extended &lt;a href=&quot;https://en.wikipedia.org/wiki/ELIZA&quot;&gt;Eliza&lt;/a&gt; called &lt;a href=&quot;https://en.wikipedia.org/wiki/Artificial_Linguistic_Internet_Computer_Entity&quot;&gt;&amp;quot;A.L.I.C.E.&amp;quot; (Artificial Linguistic Internet Computer Entity)&lt;/a&gt; which won the annual &lt;a href=&quot;https://en.wikipedia.org/wiki/Loebner_Prize&quot;&gt;Loebner Prize Competition&lt;/a&gt; in Artificial Intelligence three times and was also the Chatterbox Challenge Champion in 2004.&lt;/p&gt;

&lt;p&gt;Because the A.L.I.C.E. AIML set was released under the GNU GPL and because most AIML interpreters were offered under a free or open source license, I started to develop one for myself. I used &lt;a href=&quot;http://aimlbot.sourceforge.net/&quot;&gt;AIMLbot.dll&lt;/a&gt; as the core engine for my own chatter bot program. AIMLbot (Program#) is a small, fast, standards-compliant yet easily customizable implementation of an AIML based chatter bot in C#. Due to my deep interest in this project, I got myself to learn more about the markup language structures used in AIML from &lt;a href=&quot;http://arxiv.org/ftp/arxiv/papers/1307/1307.3091.pdf&quot;&gt;this one research paper&lt;/a&gt;. While the AIMLbot.dll was just the basis of handling the chat responses, I got my chatter bot implemented with some extra features such as executing specific tasks based on the received commands.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://heiswayi.github.io/images/20150811/wayi1.png&quot;&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150811/wayi1.png&quot; alt=&quot;WAYI v1&quot;&gt;&lt;/a&gt;
&lt;em&gt;WAYI v1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://heiswayi.github.io/images/20150811/wayi2.png&quot;&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150811/wayi1.png&quot; alt=&quot;WAYI v2&quot;&gt;&lt;/a&gt;
&lt;em&gt;WAYI v2&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;siml-the-next-step-in-chatbot-technology&quot;&gt;&lt;strong&gt;SIML: The Next Step in Chatbot Technology&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;After some time, I found another bot markup language known as &lt;a href=&quot;http://simlbot.com/&quot;&gt;Synthetic Intelligence Markup Language (SIML)&lt;/a&gt;, which was more powerful than AIML. SIML provided much better features than AIML. So, I switched my chatter bot development to use SIML as its core. Plus, SIML also provided their own chatbot studio program called Syn Chatbot Studio.&lt;/p&gt;

&lt;p&gt;Based on their site, Syn Chatbot Studio offered a comprehensive collection of tools to develop intelligent Chatbots that targeted desktops, mobile and web platforms. It featured with Code Analysis, AIML to SIML converter, JavaScript Editor, Regex Tester and smooth Auto-Complete. Well, I liked it the most when SIML was able to execute JavaScript function from its routine of responses. More interesting features of SIML also can be found on their &lt;a href=&quot;http://wiki.syn.co.in/&quot;&gt;wiki site&lt;/a&gt; and &lt;a href=&quot;https://github.com/SynHub&quot;&gt;GitHub repos&lt;/a&gt; for contributions.&lt;/p&gt;

&lt;p&gt;Right now, for a desktop-based application, SIML is the latest technology and the best choice for my AI chatbot program.&lt;/p&gt;

&lt;h3 id=&quot;w4y1-my-live-ai-program-that-represented-a-part-of-myself&quot;&gt;W4Y1: My Live AI Program That Represented a Part of Myself&lt;/h3&gt;

&lt;p&gt;Instead of developing a desktop-based application for an AI chatbot program, I also need one that I can access it via web and available online. I want people able to access it from anywhere using the Internet. Still a chatbot, but represented a different purpose. I need an AI chatbot program that can represent a part of myself as a fragment of knowledge in my mind. To realize this, I develop my own AI program known as &amp;quot;W4Y1&amp;quot;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The purpose of W4Y1 is only one; representing a fragment of my knowledge and memories.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you ever watched &lt;a href=&quot;http://www.imdb.com/title/tt0343818/&quot;&gt;I, Robot (2004)&lt;/a&gt; movie, yes, this is inspired from Dr. Alfred Lanning&amp;#39;s hologram device used to leave his message for Spooner&amp;#39;s investigation. Just that, mine is in the form of terminal, text format interaction and hosted online on Linux-based web server.&lt;/p&gt;

&lt;p&gt;I developed W4Y1 based on &lt;a href=&quot;http://www.masswerk.at/elizabot/&quot;&gt;elizabot.js&lt;/a&gt; by &lt;strong&gt;Norbert Landsteiner&lt;/strong&gt; as its web engine for AI markup language and processing, &lt;a href=&quot;http://terminal.jcubic.pl/&quot;&gt;jQuery Terminal Emulator plugin&lt;/a&gt; by &lt;strong&gt;Jakub Jankiewicz&lt;/strong&gt; for the program interface or GUI, and &lt;a href=&quot;http://vincentgarreau.com/particles.js/&quot;&gt;particles.js&lt;/a&gt; by &lt;strong&gt;Vincent Garreau&lt;/strong&gt; for the particles effect in the background.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://heiswayi.github.io/images/20150811/W4Y1.png&quot;&gt;&lt;img src=&quot;http://heiswayi.github.io/images/20150811/W4Y1.png&quot; alt=&quot;W4Y1&quot;&gt;&lt;/a&gt;
&lt;em&gt;The Screenshot&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The program is accessible &lt;strong&gt;live&lt;/strong&gt; here: &lt;del&gt;&lt;a href=&quot;http://ai.wayi.me&quot;&gt;&lt;strong&gt;http://ai.wayi.me&lt;/strong&gt;&lt;/a&gt;&lt;/del&gt; &lt;a href=&quot;http://heiswayi.github.io/w4y1&quot;&gt;&lt;strong&gt;http://heiswayi.github.io/w4y1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AI Level&lt;/strong&gt; is a percentage of my knowledge in the program database. The value is depending how much my knowledge I am able to transfer into digital information form. For sure, it will increase by the time. There&amp;#39;s no scientific calculation to that, just based on my will.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Right now, my program is still under EXPERIMENTAL and released as a &lt;strong&gt;beta version&lt;/strong&gt;. From time to time, I&amp;#39;m improving it, extending its features and development. Below are some of my to-do things that I want to implement into W4Y1.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integrate with &lt;a href=&quot;http://mathjs.org/&quot;&gt;math.js&lt;/a&gt; for mathematical computations.&lt;/li&gt;
&lt;li&gt;Implement AJAX request for accessing PHP files, so more features can be performed by PHP.&lt;/li&gt;
&lt;li&gt;Centralize the knowledge database somewhere and encrypt the data.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;if-you-ask-me-why&quot;&gt;&lt;strong&gt;If you ask me WHY?&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;If you ask me why I built this program, maybe this is the answer; I don&amp;#39;t know when I&amp;#39;m going to die for sure. I might not be able to tell everything I want to people I loved, but at least with this program, they might able to find some answers from me. Even it&amp;#39;s the same if I&amp;#39;m getting old and older. Knowledge and memories can fade away and be forgotten. Every word is meaningful and I don&amp;#39;t want to lose it. Whatever thing that I promised, I want to realize it as far as I can. Just find me here if one day I am no longer be able to talk to.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m just experimenting stuffs, no big deal! :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Blogging Like A Hacker</title>
   <link href="http://heiswayi.github.io/blogging-like-a-hacker.html"/>
   <updated>2015-07-27T00:00:00+08:00</updated>
   <id>http://heiswayi.github.io/blogging-like-a-hacker</id>
   <content type="html">&lt;p&gt;Hello, there!&lt;/p&gt;

&lt;p&gt;Back in 2008, the Founder of &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;, &lt;strong&gt;Tom Preston-Werner&lt;/strong&gt; wrote &lt;a href=&quot;http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html&quot;&gt;Blogging Like a Hacker&lt;/a&gt; (a recommended read), introducing &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; - a simple, blog aware, static site generator. In his blog post, Tom thoroughly elaborated how Jekyll works with GitHub.&lt;/p&gt;

&lt;p&gt;Today, Tom&amp;#39;s idea has evolved to become &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, a fully-fledged, free hosting service for static web pages on GitHub where we can write our web pages in a simple &lt;a href=&quot;http://daringfireball.net/projects/markdown&quot;&gt;markdown&lt;/a&gt; language, organize them in a straightforward directory structure and then, let the GitHub does the rest.&lt;/p&gt;

&lt;p&gt;In the past few years, I have been using &lt;a href=&quot;https://wordpress.org&quot;&gt;WordPress&lt;/a&gt; all the times for my websites or blogs. I don&amp;#39;t even know about this awesome static blog generator because I don&amp;#39;t have any kind of experiences using GitHub before. Just starting this year, 2015, I started using GitHub repositories to port some of the projects. Then, I started exploring Jekyll and use it for my new website/blog.&lt;/p&gt;

&lt;h3 id=&quot;reasons-of-switching&quot;&gt;Reasons of Switching&lt;/h3&gt;

&lt;p&gt;Here are the REASONS why I made a switch from WordPress to Jekyll if you asked me;-&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. No server-side setup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tom created Jekyll to enable people to blog using a simple static HTML website, with all of the content hosted freely and version-controlled on GitHub. The goal was to eliminate the complexity of other blogging platforms by creating rapid workflow that allow me to blog like a hacker. GitHub Pages serves my website content directly from my GitHub repository, so that I don&amp;#39;t have to deal with any web hosting to get a piece of web storages. No database and no CMS involved. GitHub can serve itself as a CMS if needed because I can edit the content on it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Fast, minimal and secure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jekyll is fast because it&amp;#39;s being stripped down and without a database. It&amp;#39;s just serving up the static pages. No database calls are made when a page is loaded. For people like me who admires the simplicity in the workflow, my Jekyll website includes absolutely no functionality or features that I&amp;#39;m not using. I can just focus directly to the writing content. Plus, the vast majority of vulnerabilities that affect platforms like WordPress don&amp;#39;t exist because Jekyll has no CMS, database or PHP. So, I don&amp;#39;t have to spend as much time to keep up with the security updates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Complete control over design and content&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To start a Jekyll site is quite easy, you can just fork any free Jekyll theme as a start point and begin publishing. Most of them (Jekyll themes) I found on GitHub repositories are released under MIT license. So you can spend less time wrestling with complex templates by other people and more time creating your own theme or customizing an uncomplicated base theme. As for me, I forked one of them as the base theme, then started customizing the theme in any way I please as a start. If you need, you can find more themes on &lt;a href=&quot;http://drjekyllthemes.github.io&quot;&gt;Dr. Jekyll&amp;#39;s Themes&lt;/a&gt; to begin with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Markdown and local development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I started to love markdown because it&amp;#39;s a distraction-free writing tool. All I need is a little practice to be familiar with the syntaxes. Refering to &lt;a href=&quot;https://guides.github.com/features/mastering-markdown&quot;&gt;Mastering Markdown by GitHub Guides&lt;/a&gt; is just enough to make me skillful when writing in markdown. Other than that, when you create a file (e.g. page or post) with &lt;code&gt;.md&lt;/code&gt; extension, you can do that in your local computer as a local development if there is no Internet connection. When you&amp;#39;re back online, you can just sync or push up some commits and deploy it to the remote host on your GitHub. You may do this using git commands or via GitHub GUI software. I also can access my blog, create a new file or edit the existing file online via the GitHub website itself. Even if GitHub goes down, I still have the backup in my local computer.&lt;/p&gt;

&lt;p&gt;These are the four reasons I can conclude here. If you need an inspiration, you may take a look here, &lt;a href=&quot;https://github.com/jekyll/jekyll/wiki/sites&quot;&gt;a bunch of folks&lt;/a&gt; has been using the software (Jekyll) for their sites.&lt;/p&gt;

&lt;h3 id=&quot;workflow&quot;&gt;Workflow&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;If you ask me, how my workflow works and what kind of tools that I have used?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Maybe this can help. I&amp;#39;m using Windows for both my PC at home and office because most of my professional works/software are based on Windows OS environment. All I need at first is to download &lt;a href=&quot;https://windows.github.com&quot;&gt;GitHub for Windows&lt;/a&gt; software and install it on my PC. I operate the software in both way; sometimes GUI, sometimes through the Git Shell. If not necessary for me to use the software, I just manage them directly on the GitHub website.&lt;/p&gt;

&lt;p&gt;My default text editor is &lt;a href=&quot;http://xhmikosr.github.io/notepad2-mod&quot;&gt;Notepad2-mod&lt;/a&gt;, which is used as a replacement to the default Notepad program. However, my favorite use of text editor is &lt;a href=&quot;https://atom.io&quot;&gt;GitHub&amp;#39;s Atom Editor&lt;/a&gt;, a hackable text editor they said, but as for me, it&amp;#39;s the best editor I ever experienced, compared to &lt;a href=&quot;https://code.visualstudio.com&quot;&gt;Visual Studio Code&lt;/a&gt; and &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;. Like this post and the others, all are written using the GitHub&amp;#39;s Atom Editor with Markdown Preview.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Simplicity is everything. Some people said; &lt;code&gt;Less is more.&lt;/code&gt; Being a minimalist is not that simple. But being a minimalist is a part of myself. I try my best to utilize everything around me with minimum spending of dollars. Let&amp;#39;s do this in the Hacker Way: &lt;em&gt;&amp;quot;Why pay if there&amp;#39;s a thing that available for free?&amp;quot;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;&lt;strong&gt;Jekyll&lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;https://pages.github.com&quot;&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; + &lt;a href=&quot;http://daringfireball.net/projects/markdown&quot;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt; = &lt;strong&gt;Blogging like a Hacker&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
